; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 325
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %237 "foo_vert" %232 %235
OpEntryPoint Fragment %279 "foo_frag" %278
OpEntryPoint GLCompute %298 "atomics"
OpEntryPoint GLCompute %322 "assign_through_ptr"
OpExecutionMode %279 OriginUpperLeft
OpExecutionMode %298 LocalSize 1 1 1
OpExecutionMode %322 LocalSize 1 1 1
OpSource GLSL 450
OpMemberName %36 0 "a"
OpMemberName %36 1 "b"
OpMemberName %36 2 "c"
OpName %36 "GlobalConst"
OpMemberName %37 0 "value"
OpName %37 "AlignedWrapper"
OpMemberName %47 0 "_matrix"
OpMemberName %47 1 "matrix_array"
OpMemberName %47 2 "atom"
OpMemberName %47 3 "atom_arr"
OpMemberName %47 4 "arr"
OpMemberName %47 5 "data"
OpName %47 "Bar"
OpMemberName %49 0 "m"
OpName %49 "Baz"
OpMemberName %53 0 "am"
OpName %53 "MatCx2InArray"
OpName %70 "global_const"
OpName %72 "bar"
OpName %74 "baz"
OpName %77 "qux"
OpName %80 "nested_mat_cx2"
OpName %83 "val"
OpName %84 "idx"
OpName %87 "t"
OpName %91 "test_matrix_within_struct_accesses"
OpName %148 "idx"
OpName %150 "t"
OpName %154 "test_matrix_within_array_within_struct_accesses"
OpName %209 "foo"
OpName %210 "read_from_private"
OpName %215 "a"
OpName %216 "test_arr_as_arg"
OpName %222 "p"
OpName %223 "assign_through_ptr_fn"
OpName %226 "foo"
OpName %228 "c2"
OpName %232 "vi"
OpName %237 "foo_vert"
OpName %279 "foo_frag"
OpName %295 "tmp"
OpName %298 "atomics"
OpName %322 "assign_through_ptr"
OpMemberDecorate %36 0 Offset 0
OpMemberDecorate %36 1 Offset 16
OpMemberDecorate %36 2 Offset 28
OpMemberDecorate %37 0 Offset 0
OpDecorate %42 ArrayStride 16
OpDecorate %43 ArrayStride 4
OpDecorate %45 ArrayStride 8
OpDecorate %46 ArrayStride 8
OpMemberDecorate %47 0 Offset 0
OpMemberDecorate %47 0 ColMajor
OpMemberDecorate %47 0 MatrixStride 16
OpMemberDecorate %47 1 Offset 64
OpMemberDecorate %47 1 ColMajor
OpMemberDecorate %47 1 MatrixStride 8
OpMemberDecorate %47 2 Offset 96
OpMemberDecorate %47 3 Offset 100
OpMemberDecorate %47 4 Offset 144
OpMemberDecorate %47 5 Offset 160
OpMemberDecorate %49 0 Offset 0
OpMemberDecorate %49 0 ColMajor
OpMemberDecorate %49 0 MatrixStride 8
OpDecorate %52 ArrayStride 32
OpMemberDecorate %53 0 Offset 0
OpMemberDecorate %53 0 ColMajor
OpMemberDecorate %53 0 MatrixStride 8
OpDecorate %55 ArrayStride 4
OpDecorate %56 ArrayStride 40
OpDecorate %59 ArrayStride 4
OpDecorate %72 DescriptorSet 0
OpDecorate %72 Binding 0
OpDecorate %47 Block
OpDecorate %74 DescriptorSet 0
OpDecorate %74 Binding 1
OpDecorate %75 Block
OpMemberDecorate %75 0 Offset 0
OpDecorate %77 DescriptorSet 0
OpDecorate %77 Binding 2
OpDecorate %78 Block
OpMemberDecorate %78 0 Offset 0
OpDecorate %80 DescriptorSet 0
OpDecorate %80 Binding 3
OpDecorate %81 Block
OpMemberDecorate %81 0 Offset 0
OpDecorate %232 BuiltIn VertexIndex
OpDecorate %235 BuiltIn Position
OpDecorate %278 Location 0
%2 = OpTypeVoid
%4 = OpTypeInt 32 0
%3 = OpConstant  %4  0
%6 = OpTypeInt 32 1
%5 = OpConstant  %6  0
%7 = OpConstant  %6  2
%8 = OpConstant  %6  10
%9 = OpConstant  %6  1
%11 = OpTypeFloat 32
%10 = OpConstant  %11  1.0
%12 = OpConstant  %11  2.0
%13 = OpConstant  %11  3.0
%14 = OpConstant  %11  6.0
%15 = OpConstant  %11  5.0
%16 = OpConstant  %11  4.0
%17 = OpConstant  %11  9.0
%18 = OpConstant  %11  90.0
%19 = OpConstant  %11  10.0
%20 = OpConstant  %11  20.0
%21 = OpConstant  %11  30.0
%22 = OpConstant  %11  40.0
%23 = OpConstant  %11  0.0
%24 = OpConstant  %11  8.0
%25 = OpConstant  %11  7.0
%26 = OpConstant  %6  5
%27 = OpConstant  %6  4
%28 = OpConstant  %6  9
%29 = OpConstant  %4  3
%30 = OpConstant  %4  2
%31 = OpConstant  %6  3
%32 = OpConstant  %4  1
%33 = OpConstant  %6  42
%34 = OpConstant  %4  42
%35 = OpTypeVector %4 3
%36 = OpTypeStruct %4 %35 %6
%37 = OpTypeStruct %6
%39 = OpTypeVector %11 3
%38 = OpTypeMatrix %39 4
%41 = OpTypeVector %11 2
%40 = OpTypeMatrix %41 2
%42 = OpTypeArray %40 %7
%43 = OpTypeArray %6 %8
%44 = OpTypeVector %4 2
%45 = OpTypeArray %44 %7
%46 = OpTypeRuntimeArray %37
%47 = OpTypeStruct %38 %42 %6 %43 %45 %46
%48 = OpTypeMatrix %41 3
%49 = OpTypeStruct %48
%50 = OpTypeVector %6 2
%51 = OpTypeMatrix %41 4
%52 = OpTypeArray %51 %7
%53 = OpTypeStruct %52
%54 = OpTypePointer Function %11
%55 = OpTypeArray %11 %8
%56 = OpTypeArray %55 %26
%57 = OpTypeVector %11 4
%58 = OpTypePointer StorageBuffer %6
%59 = OpTypeArray %6 %26
%60 = OpTypeVector %6 4
%61 = OpTypePointer Workgroup %4
%62 = OpConstantComposite  %35  %3 %3 %3
%63 = OpConstantComposite  %36  %3 %62 %5
%64 = OpConstantComposite  %41  %23 %23
%65 = OpConstantComposite  %51  %64 %64 %64 %64
%66 = OpConstantComposite  %52  %65 %65
%67 = OpConstantComposite  %55  %23 %23 %23 %23 %23 %23 %23 %23 %23 %23
%68 = OpConstantComposite  %56  %67 %67 %67 %67 %67
%69 = OpConstantComposite  %50  %5 %5
%71 = OpTypePointer Private %36
%70 = OpVariable  %71  Private %63
%73 = OpTypePointer StorageBuffer %47
%72 = OpVariable  %73  StorageBuffer
%75 = OpTypeStruct %49
%76 = OpTypePointer Uniform %75
%74 = OpVariable  %76  Uniform
%78 = OpTypeStruct %50
%79 = OpTypePointer StorageBuffer %78
%77 = OpVariable  %79  StorageBuffer
%81 = OpTypeStruct %53
%82 = OpTypePointer Uniform %81
%80 = OpVariable  %82  Uniform
%83 = OpVariable  %61  Workgroup
%85 = OpTypePointer Function %6
%86 = OpConstantNull  %6
%88 = OpTypePointer Function %49
%89 = OpConstantNull  %49
%92 = OpTypeFunction %2
%93 = OpTypePointer Uniform %49
%98 = OpTypePointer Uniform %48
%101 = OpTypePointer Uniform %41
%107 = OpTypePointer Uniform %11
%127 = OpTypePointer Function %48
%133 = OpTypePointer Function %41
%139 = OpTypePointer Function %11
%149 = OpConstantNull  %6
%151 = OpTypePointer Function %53
%152 = OpConstantNull  %53
%155 = OpTypePointer Uniform %53
%160 = OpTypePointer Uniform %52
%163 = OpTypePointer Uniform %51
%186 = OpTypePointer Function %52
%188 = OpTypePointer Function %51
%211 = OpTypeFunction %11 %54
%217 = OpTypeFunction %11 %56
%224 = OpTypeFunction %2 %61
%227 = OpConstantNull  %11
%229 = OpTypePointer Function %59
%230 = OpConstantNull  %59
%233 = OpTypePointer Input %4
%232 = OpVariable  %233  Input
%236 = OpTypePointer Output %57
%235 = OpVariable  %236  Output
%239 = OpTypePointer StorageBuffer %50
%246 = OpTypePointer StorageBuffer %38
%249 = OpTypePointer StorageBuffer %45
%250 = OpConstant  %4  4
%253 = OpTypePointer StorageBuffer %39
%254 = OpTypePointer StorageBuffer %11
%257 = OpTypePointer StorageBuffer %46
%260 = OpTypePointer StorageBuffer %37
%261 = OpConstant  %4  5
%278 = OpVariable  %236  Output
%296 = OpConstantNull  %6
%300 = OpTypePointer StorageBuffer %6
%303 = OpConstant  %4  64
%91 = OpFunction  %2  None %92
%90 = OpLabel
%84 = OpVariable  %85  Function %86
%87 = OpVariable  %88  Function %89
%94 = OpAccessChain  %93  %74 %3
OpBranch %95
%95 = OpLabel
OpStore %84 %9
%96 = OpLoad  %6  %84
%97 = OpISub  %6  %96 %9
OpStore %84 %97
%99 = OpAccessChain  %98  %94 %3
%100 = OpLoad  %48  %99
%102 = OpAccessChain  %101  %94 %3 %3
%103 = OpLoad  %41  %102
%104 = OpLoad  %6  %84
%105 = OpAccessChain  %101  %94 %3 %104
%106 = OpLoad  %41  %105
%108 = OpAccessChain  %107  %94 %3 %3 %32
%109 = OpLoad  %11  %108
%110 = OpLoad  %6  %84
%111 = OpAccessChain  %107  %94 %3 %3 %110
%112 = OpLoad  %11  %111
%113 = OpLoad  %6  %84
%114 = OpAccessChain  %107  %94 %3 %113 %32
%115 = OpLoad  %11  %114
%116 = OpLoad  %6  %84
%117 = OpLoad  %6  %84
%118 = OpAccessChain  %107  %94 %3 %116 %117
%119 = OpLoad  %11  %118
%120 = OpCompositeConstruct  %41  %10 %10
%121 = OpCompositeConstruct  %41  %12 %12
%122 = OpCompositeConstruct  %41  %13 %13
%123 = OpCompositeConstruct  %48  %120 %121 %122
%124 = OpCompositeConstruct  %49  %123
OpStore %87 %124
%125 = OpLoad  %6  %84
%126 = OpIAdd  %6  %125 %9
OpStore %84 %126
%128 = OpCompositeConstruct  %41  %14 %14
%129 = OpCompositeConstruct  %41  %15 %15
%130 = OpCompositeConstruct  %41  %16 %16
%131 = OpCompositeConstruct  %48  %128 %129 %130
%132 = OpAccessChain  %127  %87 %3
OpStore %132 %131
%134 = OpCompositeConstruct  %41  %17 %17
%135 = OpAccessChain  %133  %87 %3 %3
OpStore %135 %134
%136 = OpLoad  %6  %84
%137 = OpCompositeConstruct  %41  %18 %18
%138 = OpAccessChain  %133  %87 %3 %136
OpStore %138 %137
%140 = OpAccessChain  %139  %87 %3 %3 %32
OpStore %140 %19
%141 = OpLoad  %6  %84
%142 = OpAccessChain  %139  %87 %3 %3 %141
OpStore %142 %20
%143 = OpLoad  %6  %84
%144 = OpAccessChain  %139  %87 %3 %143 %32
OpStore %144 %21
%145 = OpLoad  %6  %84
%146 = OpLoad  %6  %84
%147 = OpAccessChain  %139  %87 %3 %145 %146
OpStore %147 %22
OpReturn
OpFunctionEnd
%154 = OpFunction  %2  None %92
%153 = OpLabel
%148 = OpVariable  %85  Function %149
%150 = OpVariable  %151  Function %152
%156 = OpAccessChain  %155  %80 %3
OpBranch %157
%157 = OpLabel
OpStore %148 %9
%158 = OpLoad  %6  %148
%159 = OpISub  %6  %158 %9
OpStore %148 %159
%161 = OpAccessChain  %160  %156 %3
%162 = OpLoad  %52  %161
%164 = OpAccessChain  %163  %156 %3 %3
%165 = OpLoad  %51  %164
%166 = OpAccessChain  %101  %156 %3 %3 %3
%167 = OpLoad  %41  %166
%168 = OpLoad  %6  %148
%169 = OpAccessChain  %101  %156 %3 %3 %168
%170 = OpLoad  %41  %169
%171 = OpAccessChain  %107  %156 %3 %3 %3 %32
%172 = OpLoad  %11  %171
%173 = OpLoad  %6  %148
%174 = OpAccessChain  %107  %156 %3 %3 %3 %173
%175 = OpLoad  %11  %174
%176 = OpLoad  %6  %148
%177 = OpAccessChain  %107  %156 %3 %3 %176 %32
%178 = OpLoad  %11  %177
%179 = OpLoad  %6  %148
%180 = OpLoad  %6  %148
%181 = OpAccessChain  %107  %156 %3 %3 %179 %180
%182 = OpLoad  %11  %181
%183 = OpCompositeConstruct  %53  %66
OpStore %150 %183
%184 = OpLoad  %6  %148
%185 = OpIAdd  %6  %184 %9
OpStore %148 %185
%187 = OpAccessChain  %186  %150 %3
OpStore %187 %66
%189 = OpCompositeConstruct  %41  %24 %24
%190 = OpCompositeConstruct  %41  %25 %25
%191 = OpCompositeConstruct  %41  %14 %14
%192 = OpCompositeConstruct  %41  %15 %15
%193 = OpCompositeConstruct  %51  %189 %190 %191 %192
%194 = OpAccessChain  %188  %150 %3 %3
OpStore %194 %193
%195 = OpCompositeConstruct  %41  %17 %17
%196 = OpAccessChain  %133  %150 %3 %3 %3
OpStore %196 %195
%197 = OpLoad  %6  %148
%198 = OpCompositeConstruct  %41  %18 %18
%199 = OpAccessChain  %133  %150 %3 %3 %197
OpStore %199 %198
%200 = OpAccessChain  %139  %150 %3 %3 %3 %32
OpStore %200 %19
%201 = OpLoad  %6  %148
%202 = OpAccessChain  %139  %150 %3 %3 %3 %201
OpStore %202 %20
%203 = OpLoad  %6  %148
%204 = OpAccessChain  %139  %150 %3 %3 %203 %32
OpStore %204 %21
%205 = OpLoad  %6  %148
%206 = OpLoad  %6  %148
%207 = OpAccessChain  %139  %150 %3 %3 %205 %206
OpStore %207 %22
OpReturn
OpFunctionEnd
%210 = OpFunction  %11  None %211
%209 = OpFunctionParameter  %54
%208 = OpLabel
OpBranch %212
%212 = OpLabel
%213 = OpLoad  %11  %209
OpReturnValue %213
OpFunctionEnd
%216 = OpFunction  %11  None %217
%215 = OpFunctionParameter  %56
%214 = OpLabel
OpBranch %218
%218 = OpLabel
%219 = OpCompositeExtract  %55  %215 4
%220 = OpCompositeExtract  %11  %219 9
OpReturnValue %220
OpFunctionEnd
%223 = OpFunction  %2  None %224
%222 = OpFunctionParameter  %61
%221 = OpLabel
OpBranch %225
%225 = OpLabel
OpStore %222 %34
OpReturn
OpFunctionEnd
%237 = OpFunction  %2  None %92
%231 = OpLabel
%226 = OpVariable  %54  Function %227
%228 = OpVariable  %229  Function %230
%234 = OpLoad  %4  %232
%238 = OpAccessChain  %93  %74 %3
%240 = OpAccessChain  %239  %77 %3
%241 = OpAccessChain  %155  %80 %3
OpBranch %242
%242 = OpLabel
OpStore %226 %23
%243 = OpLoad  %11  %226
OpStore %226 %10
%244 = OpFunctionCall  %2  %91
%245 = OpFunctionCall  %2  %154
%247 = OpAccessChain  %246  %72 %3
%248 = OpLoad  %38  %247
%251 = OpAccessChain  %249  %72 %250
%252 = OpLoad  %45  %251
%255 = OpAccessChain  %254  %72 %3 %29 %3
%256 = OpLoad  %11  %255
%258 = OpArrayLength  %4  %72 5
%259 = OpISub  %4  %258 %30
%262 = OpAccessChain  %58  %72 %261 %259 %3
%263 = OpLoad  %6  %262
%264 = OpLoad  %50  %240
%265 = OpFunctionCall  %11  %210 %226
%266 = OpConvertFToS  %6  %256
%267 = OpCompositeConstruct  %59  %263 %266 %31 %27 %26
OpStore %228 %267
%268 = OpIAdd  %4  %234 %32
%269 = OpAccessChain  %85  %228 %268
OpStore %269 %33
%270 = OpAccessChain  %85  %228 %234
%271 = OpLoad  %6  %270
%272 = OpFunctionCall  %11  %216 %68
%273 = OpCompositeConstruct  %60  %271 %271 %271 %271
%274 = OpConvertSToF  %57  %273
%275 = OpMatrixTimesVector  %39  %248 %274
%276 = OpCompositeConstruct  %57  %275 %12
OpStore %235 %276
OpReturn
OpFunctionEnd
%279 = OpFunction  %2  None %92
%277 = OpLabel
%280 = OpAccessChain  %239  %77 %3
OpBranch %281
%281 = OpLabel
%282 = OpAccessChain  %254  %72 %3 %32 %30
OpStore %282 %10
%283 = OpCompositeConstruct  %39  %23 %23 %23
%284 = OpCompositeConstruct  %39  %10 %10 %10
%285 = OpCompositeConstruct  %39  %12 %12 %12
%286 = OpCompositeConstruct  %39  %13 %13 %13
%287 = OpCompositeConstruct  %38  %283 %284 %285 %286
%288 = OpAccessChain  %246  %72 %3
OpStore %288 %287
%289 = OpCompositeConstruct  %44  %3 %3
%290 = OpCompositeConstruct  %44  %32 %32
%291 = OpCompositeConstruct  %45  %289 %290
%292 = OpAccessChain  %249  %72 %250
OpStore %292 %291
%293 = OpAccessChain  %58  %72 %261 %32 %3
OpStore %293 %9
OpStore %280 %69
%294 = OpCompositeConstruct  %57  %23 %23 %23 %23
OpStore %278 %294
OpReturn
OpFunctionEnd
%298 = OpFunction  %2  None %92
%297 = OpLabel
%295 = OpVariable  %85  Function %296
OpBranch %299
%299 = OpLabel
%301 = OpAccessChain  %300  %72 %30
%302 = OpAtomicLoad  %6  %301 %9 %303
%305 = OpAccessChain  %300  %72 %30
%304 = OpAtomicIAdd  %6  %305 %9 %303 %26
OpStore %295 %304
%307 = OpAccessChain  %300  %72 %30
%306 = OpAtomicISub  %6  %307 %9 %303 %26
OpStore %295 %306
%309 = OpAccessChain  %300  %72 %30
%308 = OpAtomicAnd  %6  %309 %9 %303 %26
OpStore %295 %308
%311 = OpAccessChain  %300  %72 %30
%310 = OpAtomicOr  %6  %311 %9 %303 %26
OpStore %295 %310
%313 = OpAccessChain  %300  %72 %30
%312 = OpAtomicXor  %6  %313 %9 %303 %26
OpStore %295 %312
%315 = OpAccessChain  %300  %72 %30
%314 = OpAtomicSMin  %6  %315 %9 %303 %26
OpStore %295 %314
%317 = OpAccessChain  %300  %72 %30
%316 = OpAtomicSMax  %6  %317 %9 %303 %26
OpStore %295 %316
%319 = OpAccessChain  %300  %72 %30
%318 = OpAtomicExchange  %6  %319 %9 %303 %26
OpStore %295 %318
%320 = OpAccessChain  %300  %72 %30
OpAtomicStore %320 %9 %303 %302
OpReturn
OpFunctionEnd
%322 = OpFunction  %2  None %92
%321 = OpLabel
OpBranch %323
%323 = OpLabel
%324 = OpFunctionCall  %2  %223 %83
OpReturn
OpFunctionEnd