; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 248
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %163 "foo_vert" %158 %161
OpEntryPoint Fragment %202 "foo_frag" %201
OpEntryPoint GLCompute %221 "atomics"
OpEntryPoint GLCompute %245 "assign_through_ptr"
OpExecutionMode %202 OriginUpperLeft
OpExecutionMode %221 LocalSize 1 1 1
OpExecutionMode %245 LocalSize 1 1 1
OpSource GLSL 450
OpMemberName %34 0 "a"
OpMemberName %34 1 "b"
OpMemberName %34 2 "c"
OpName %34 "GlobalConst"
OpMemberName %35 0 "value"
OpName %35 "AlignedWrapper"
OpMemberName %44 0 "_matrix"
OpMemberName %44 1 "matrix_array"
OpMemberName %44 2 "atom"
OpMemberName %44 3 "arr"
OpMemberName %44 4 "data"
OpName %44 "Bar"
OpMemberName %46 0 "m"
OpName %46 "Baz"
OpName %60 "global_const"
OpName %62 "bar"
OpName %64 "baz"
OpName %67 "qux"
OpName %70 "val"
OpName %71 "idx"
OpName %73 "t"
OpName %77 "test_matrix_within_struct_accesses"
OpName %136 "foo"
OpName %137 "read_from_private"
OpName %142 "a"
OpName %143 "test_arr_as_arg"
OpName %149 "p"
OpName %150 "assign_through_ptr_fn"
OpName %153 "foo"
OpName %154 "c"
OpName %158 "vi"
OpName %163 "foo_vert"
OpName %202 "foo_frag"
OpName %218 "tmp"
OpName %221 "atomics"
OpName %245 "assign_through_ptr"
OpMemberDecorate %34 0 Offset 0
OpMemberDecorate %34 1 Offset 16
OpMemberDecorate %34 2 Offset 28
OpMemberDecorate %35 0 Offset 0
OpDecorate %40 ArrayStride 16
OpDecorate %42 ArrayStride 8
OpDecorate %43 ArrayStride 8
OpMemberDecorate %44 0 Offset 0
OpMemberDecorate %44 0 ColMajor
OpMemberDecorate %44 0 MatrixStride 16
OpMemberDecorate %44 1 Offset 64
OpMemberDecorate %44 1 ColMajor
OpMemberDecorate %44 1 MatrixStride 8
OpMemberDecorate %44 2 Offset 96
OpMemberDecorate %44 3 Offset 104
OpMemberDecorate %44 4 Offset 120
OpMemberDecorate %46 0 Offset 0
OpMemberDecorate %46 0 ColMajor
OpMemberDecorate %46 0 MatrixStride 8
OpDecorate %49 ArrayStride 4
OpDecorate %50 ArrayStride 40
OpDecorate %53 ArrayStride 4
OpDecorate %62 DescriptorSet 0
OpDecorate %62 Binding 0
OpDecorate %44 Block
OpDecorate %64 DescriptorSet 0
OpDecorate %64 Binding 1
OpDecorate %65 Block
OpMemberDecorate %65 0 Offset 0
OpDecorate %67 DescriptorSet 0
OpDecorate %67 Binding 2
OpDecorate %68 Block
OpMemberDecorate %68 0 Offset 0
OpDecorate %158 BuiltIn VertexIndex
OpDecorate %161 BuiltIn Position
OpDecorate %201 Location 0
%2 = OpTypeVoid
%4 = OpTypeInt 32 0
%3 = OpConstant  %4  0
%6 = OpTypeInt 32 1
%5 = OpConstant  %6  0
%7 = OpConstant  %6  2
%8 = OpConstant  %6  1
%10 = OpTypeFloat 32
%9 = OpConstant  %10  1.0
%11 = OpConstant  %10  2.0
%12 = OpConstant  %10  3.0
%13 = OpConstant  %10  6.0
%14 = OpConstant  %10  5.0
%15 = OpConstant  %10  4.0
%16 = OpConstant  %10  9.0
%17 = OpConstant  %10  90.0
%18 = OpConstant  %10  10.0
%19 = OpConstant  %10  20.0
%20 = OpConstant  %10  30.0
%21 = OpConstant  %10  40.0
%22 = OpConstant  %6  10
%23 = OpConstant  %6  5
%24 = OpConstant  %6  4
%25 = OpConstant  %6  9
%26 = OpConstant  %10  0.0
%27 = OpConstant  %4  3
%28 = OpConstant  %4  2
%29 = OpConstant  %6  3
%30 = OpConstant  %4  1
%31 = OpConstant  %6  42
%32 = OpConstant  %4  42
%33 = OpTypeVector %4 3
%34 = OpTypeStruct %4 %33 %6
%35 = OpTypeStruct %6
%37 = OpTypeVector %10 3
%36 = OpTypeMatrix %37 4
%39 = OpTypeVector %10 2
%38 = OpTypeMatrix %39 2
%40 = OpTypeArray %38 %7
%41 = OpTypeVector %4 2
%42 = OpTypeArray %41 %7
%43 = OpTypeRuntimeArray %35
%44 = OpTypeStruct %36 %40 %6 %42 %43
%45 = OpTypeMatrix %39 3
%46 = OpTypeStruct %45
%47 = OpTypeVector %6 2
%48 = OpTypePointer Function %10
%49 = OpTypeArray %10 %22
%50 = OpTypeArray %49 %23
%51 = OpTypeVector %10 4
%52 = OpTypePointer StorageBuffer %6
%53 = OpTypeArray %6 %23
%54 = OpTypePointer Workgroup %4
%55 = OpConstantComposite  %33  %3 %3 %3
%56 = OpConstantComposite  %34  %3 %55 %5
%57 = OpConstantComposite  %49  %26 %26 %26 %26 %26 %26 %26 %26 %26 %26
%58 = OpConstantComposite  %50  %57 %57 %57 %57 %57
%59 = OpConstantComposite  %47  %5 %5
%61 = OpTypePointer Private %34
%60 = OpVariable  %61  Private %56
%63 = OpTypePointer StorageBuffer %44
%62 = OpVariable  %63  StorageBuffer
%65 = OpTypeStruct %46
%66 = OpTypePointer Uniform %65
%64 = OpVariable  %66  Uniform
%68 = OpTypeStruct %47
%69 = OpTypePointer StorageBuffer %68
%67 = OpVariable  %69  StorageBuffer
%70 = OpVariable  %54  Workgroup
%72 = OpTypePointer Function %6
%74 = OpTypePointer Function %46
%75 = OpConstantNull  %46
%78 = OpTypeFunction %2
%79 = OpTypePointer Uniform %46
%81 = OpTypePointer StorageBuffer %47
%85 = OpTypePointer Uniform %45
%88 = OpTypePointer Uniform %39
%94 = OpTypePointer Uniform %10
%114 = OpTypePointer Function %45
%120 = OpTypePointer Function %39
%126 = OpTypePointer Function %10
%138 = OpTypeFunction %10 %48
%144 = OpTypeFunction %10 %50
%151 = OpTypeFunction %2 %54
%155 = OpTypePointer Function %53
%156 = OpConstantNull  %53
%159 = OpTypePointer Input %4
%158 = OpVariable  %159  Input
%162 = OpTypePointer Output %51
%161 = OpVariable  %162  Output
%169 = OpTypePointer StorageBuffer %36
%172 = OpTypePointer StorageBuffer %42
%175 = OpTypePointer StorageBuffer %37
%176 = OpTypePointer StorageBuffer %10
%179 = OpTypePointer StorageBuffer %43
%182 = OpTypePointer StorageBuffer %35
%183 = OpConstant  %4  4
%195 = OpTypeVector %6 4
%201 = OpVariable  %162  Output
%219 = OpConstantNull  %6
%223 = OpTypePointer StorageBuffer %6
%226 = OpConstant  %4  64
%77 = OpFunction  %2  None %78
%76 = OpLabel
%71 = OpVariable  %72  Function %8
%73 = OpVariable  %74  Function %75
%80 = OpAccessChain  %79  %64 %3
OpBranch %82
%82 = OpLabel
%83 = OpLoad  %6  %71
%84 = OpISub  %6  %83 %8
OpStore %71 %84
%86 = OpAccessChain  %85  %80 %3
%87 = OpLoad  %45  %86
%89 = OpAccessChain  %88  %80 %3 %3
%90 = OpLoad  %39  %89
%91 = OpLoad  %6  %71
%92 = OpAccessChain  %88  %80 %3 %91
%93 = OpLoad  %39  %92
%95 = OpAccessChain  %94  %80 %3 %3 %30
%96 = OpLoad  %10  %95
%97 = OpLoad  %6  %71
%98 = OpAccessChain  %94  %80 %3 %3 %97
%99 = OpLoad  %10  %98
%100 = OpLoad  %6  %71
%101 = OpAccessChain  %94  %80 %3 %100 %30
%102 = OpLoad  %10  %101
%103 = OpLoad  %6  %71
%104 = OpLoad  %6  %71
%105 = OpAccessChain  %94  %80 %3 %103 %104
%106 = OpLoad  %10  %105
%107 = OpCompositeConstruct  %39  %9 %9
%108 = OpCompositeConstruct  %39  %11 %11
%109 = OpCompositeConstruct  %39  %12 %12
%110 = OpCompositeConstruct  %45  %107 %108 %109
%111 = OpCompositeConstruct  %46  %110
OpStore %73 %111
%112 = OpLoad  %6  %71
%113 = OpIAdd  %6  %112 %8
OpStore %71 %113
%115 = OpCompositeConstruct  %39  %13 %13
%116 = OpCompositeConstruct  %39  %14 %14
%117 = OpCompositeConstruct  %39  %15 %15
%118 = OpCompositeConstruct  %45  %115 %116 %117
%119 = OpAccessChain  %114  %73 %3
OpStore %119 %118
%121 = OpCompositeConstruct  %39  %16 %16
%122 = OpAccessChain  %120  %73 %3 %3
OpStore %122 %121
%123 = OpLoad  %6  %71
%124 = OpCompositeConstruct  %39  %17 %17
%125 = OpAccessChain  %120  %73 %3 %123
OpStore %125 %124
%127 = OpAccessChain  %126  %73 %3 %3 %30
OpStore %127 %18
%128 = OpLoad  %6  %71
%129 = OpAccessChain  %126  %73 %3 %3 %128
OpStore %129 %19
%130 = OpLoad  %6  %71
%131 = OpAccessChain  %126  %73 %3 %130 %30
OpStore %131 %20
%132 = OpLoad  %6  %71
%133 = OpLoad  %6  %71
%134 = OpAccessChain  %126  %73 %3 %132 %133
OpStore %134 %21
OpReturn
OpFunctionEnd
%137 = OpFunction  %10  None %138
%136 = OpFunctionParameter  %48
%135 = OpLabel
OpBranch %139
%139 = OpLabel
%140 = OpLoad  %10  %136
OpReturnValue %140
OpFunctionEnd
%143 = OpFunction  %10  None %144
%142 = OpFunctionParameter  %50
%141 = OpLabel
OpBranch %145
%145 = OpLabel
%146 = OpCompositeExtract  %49  %142 4
%147 = OpCompositeExtract  %10  %146 9
OpReturnValue %147
OpFunctionEnd
%150 = OpFunction  %2  None %151
%149 = OpFunctionParameter  %54
%148 = OpLabel
OpBranch %152
%152 = OpLabel
OpStore %149 %32
OpReturn
OpFunctionEnd
%163 = OpFunction  %2  None %78
%157 = OpLabel
%153 = OpVariable  %48  Function %26
%154 = OpVariable  %155  Function %156
%160 = OpLoad  %4  %158
%164 = OpAccessChain  %79  %64 %3
%165 = OpAccessChain  %81  %67 %3
OpBranch %166
%166 = OpLabel
%167 = OpLoad  %10  %153
OpStore %153 %9
%168 = OpFunctionCall  %2  %77
%170 = OpAccessChain  %169  %62 %3
%171 = OpLoad  %36  %170
%173 = OpAccessChain  %172  %62 %27
%174 = OpLoad  %42  %173
%177 = OpAccessChain  %176  %62 %3 %27 %3
%178 = OpLoad  %10  %177
%180 = OpArrayLength  %4  %62 4
%181 = OpISub  %4  %180 %28
%184 = OpAccessChain  %52  %62 %183 %181 %3
%185 = OpLoad  %6  %184
%186 = OpLoad  %47  %165
%187 = OpFunctionCall  %10  %137 %153
%188 = OpConvertFToS  %6  %178
%189 = OpCompositeConstruct  %53  %185 %188 %29 %24 %23
OpStore %154 %189
%190 = OpIAdd  %4  %160 %30
%191 = OpAccessChain  %72  %154 %190
OpStore %191 %31
%192 = OpAccessChain  %72  %154 %160
%193 = OpLoad  %6  %192
%194 = OpFunctionCall  %10  %143 %58
%196 = OpCompositeConstruct  %195  %193 %193 %193 %193
%197 = OpConvertSToF  %51  %196
%198 = OpMatrixTimesVector  %37  %171 %197
%199 = OpCompositeConstruct  %51  %198 %11
OpStore %161 %199
OpReturn
OpFunctionEnd
%202 = OpFunction  %2  None %78
%200 = OpLabel
%203 = OpAccessChain  %81  %67 %3
OpBranch %204
%204 = OpLabel
%205 = OpAccessChain  %176  %62 %3 %30 %28
OpStore %205 %9
%206 = OpCompositeConstruct  %37  %26 %26 %26
%207 = OpCompositeConstruct  %37  %9 %9 %9
%208 = OpCompositeConstruct  %37  %11 %11 %11
%209 = OpCompositeConstruct  %37  %12 %12 %12
%210 = OpCompositeConstruct  %36  %206 %207 %208 %209
%211 = OpAccessChain  %169  %62 %3
OpStore %211 %210
%212 = OpCompositeConstruct  %41  %3 %3
%213 = OpCompositeConstruct  %41  %30 %30
%214 = OpCompositeConstruct  %42  %212 %213
%215 = OpAccessChain  %172  %62 %27
OpStore %215 %214
%216 = OpAccessChain  %52  %62 %183 %30 %3
OpStore %216 %8
OpStore %203 %59
%217 = OpCompositeConstruct  %51  %26 %26 %26 %26
OpStore %201 %217
OpReturn
OpFunctionEnd
%221 = OpFunction  %2  None %78
%220 = OpLabel
%218 = OpVariable  %72  Function %219
OpBranch %222
%222 = OpLabel
%224 = OpAccessChain  %223  %62 %28
%225 = OpAtomicLoad  %6  %224 %8 %226
%228 = OpAccessChain  %223  %62 %28
%227 = OpAtomicIAdd  %6  %228 %8 %226 %23
OpStore %218 %227
%230 = OpAccessChain  %223  %62 %28
%229 = OpAtomicISub  %6  %230 %8 %226 %23
OpStore %218 %229
%232 = OpAccessChain  %223  %62 %28
%231 = OpAtomicAnd  %6  %232 %8 %226 %23
OpStore %218 %231
%234 = OpAccessChain  %223  %62 %28
%233 = OpAtomicOr  %6  %234 %8 %226 %23
OpStore %218 %233
%236 = OpAccessChain  %223  %62 %28
%235 = OpAtomicXor  %6  %236 %8 %226 %23
OpStore %218 %235
%238 = OpAccessChain  %223  %62 %28
%237 = OpAtomicSMin  %6  %238 %8 %226 %23
OpStore %218 %237
%240 = OpAccessChain  %223  %62 %28
%239 = OpAtomicSMax  %6  %240 %8 %226 %23
OpStore %218 %239
%242 = OpAccessChain  %223  %62 %28
%241 = OpAtomicExchange  %6  %242 %8 %226 %23
OpStore %218 %241
%243 = OpAccessChain  %223  %62 %28
OpAtomicStore %243 %8 %226 %225
OpReturn
OpFunctionEnd
%245 = OpFunction  %2  None %78
%244 = OpLabel
OpBranch %246
%246 = OpLabel
%247 = OpFunctionCall  %2  %150 %70
OpReturn
OpFunctionEnd