; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 313
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %220 "foo_vert" %215 %218
OpEntryPoint Fragment %274 "foo_frag" %273
OpEntryPoint GLCompute %292 "assign_through_ptr" %299
OpExecutionMode %274 OriginUpperLeft
OpExecutionMode %292 LocalSize 1 1 1
OpMemberName %6 0 "a"
OpMemberName %6 1 "b"
OpMemberName %6 2 "c"
OpName %6 "GlobalConst"
OpMemberName %7 0 "value"
OpName %7 "AlignedWrapper"
OpMemberName %20 0 "_matrix"
OpMemberName %20 1 "matrix_array"
OpMemberName %20 2 "atom"
OpMemberName %20 3 "atom_arr"
OpMemberName %20 4 "arr"
OpMemberName %20 5 "data"
OpName %20 "Bar"
OpMemberName %22 0 "m"
OpName %22 "Baz"
OpMemberName %26 0 "am"
OpName %26 "MatCx2InArray"
OpName %40 "global_const"
OpName %42 "bar"
OpName %44 "baz"
OpName %47 "qux"
OpName %50 "nested_mat_cx2"
OpName %53 "val"
OpName %55 "test_matrix_within_struct_accesses"
OpName %83 "idx"
OpName %85 "t"
OpName %131 "test_matrix_within_array_within_struct_accesses"
OpName %141 "idx"
OpName %142 "t"
OpName %188 "foo"
OpName %189 "read_from_private"
OpName %194 "a"
OpName %195 "test_arr_as_arg"
OpName %201 "p"
OpName %202 "assign_through_ptr_fn"
OpName %207 "foo"
OpName %208 "assign_array_through_ptr_fn"
OpName %215 "vi"
OpName %220 "foo_vert"
OpName %232 "foo"
OpName %233 "c2"
OpName %274 "foo_frag"
OpName %292 "assign_through_ptr"
OpName %296 "arr"
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 16
OpMemberDecorate %6 2 Offset 28
OpMemberDecorate %7 0 Offset 0
OpDecorate %13 ArrayStride 16
OpDecorate %15 ArrayStride 4
OpDecorate %18 ArrayStride 8
OpDecorate %19 ArrayStride 8
OpMemberDecorate %20 0 Offset 0
OpMemberDecorate %20 0 ColMajor
OpMemberDecorate %20 0 MatrixStride 16
OpMemberDecorate %20 1 Offset 64
OpMemberDecorate %20 1 ColMajor
OpMemberDecorate %20 1 MatrixStride 8
OpMemberDecorate %20 2 Offset 96
OpMemberDecorate %20 3 Offset 100
OpMemberDecorate %20 4 Offset 144
OpMemberDecorate %20 5 Offset 160
OpDecorate %20 Block
OpMemberDecorate %22 0 Offset 0
OpMemberDecorate %22 0 ColMajor
OpMemberDecorate %22 0 MatrixStride 8
OpDecorate %25 ArrayStride 32
OpMemberDecorate %26 0 Offset 0
OpMemberDecorate %26 0 ColMajor
OpMemberDecorate %26 0 MatrixStride 8
OpDecorate %28 ArrayStride 4
OpDecorate %29 ArrayStride 40
OpDecorate %32 ArrayStride 4
OpDecorate %34 ArrayStride 16
OpDecorate %42 DescriptorSet 0
OpDecorate %42 Binding 0
OpDecorate %44 DescriptorSet 0
OpDecorate %44 Binding 1
OpDecorate %45 Block
OpMemberDecorate %45 0 Offset 0
OpDecorate %47 DescriptorSet 0
OpDecorate %47 Binding 2
OpDecorate %48 Block
OpMemberDecorate %48 0 Offset 0
OpDecorate %50 DescriptorSet 0
OpDecorate %50 Binding 3
OpDecorate %51 Block
OpMemberDecorate %51 0 Offset 0
OpDecorate %215 BuiltIn VertexIndex
OpDecorate %218 BuiltIn Position
OpDecorate %273 Location 0
OpDecorate %299 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeInt 32 0
%4 = OpTypeVector %3 3
%5 = OpTypeInt 32 1
%6 = OpTypeStruct %3 %4 %5
%7 = OpTypeStruct %5
%10 = OpTypeFloat 32
%9 = OpTypeVector %10 3
%8 = OpTypeMatrix %9 4
%12 = OpTypeVector %10 2
%11 = OpTypeMatrix %12 2
%14 = OpConstant  %3  2
%13 = OpTypeArray %11 %14
%16 = OpConstant  %3  10
%15 = OpTypeArray %5 %16
%17 = OpTypeVector %3 2
%18 = OpTypeArray %17 %14
%19 = OpTypeRuntimeArray %7
%20 = OpTypeStruct %8 %13 %5 %15 %18 %19
%21 = OpTypeMatrix %12 3
%22 = OpTypeStruct %21
%23 = OpTypeVector %5 2
%24 = OpTypeMatrix %12 4
%25 = OpTypeArray %24 %14
%26 = OpTypeStruct %25
%27 = OpTypePointer Function %10
%28 = OpTypeArray %10 %16
%30 = OpConstant  %3  5
%29 = OpTypeArray %28 %30
%31 = OpTypeVector %10 4
%32 = OpTypeArray %5 %30
%33 = OpTypePointer Workgroup %3
%34 = OpTypeArray %31 %14
%35 = OpTypePointer Function %34
%36 = OpConstant  %3  0
%37 = OpConstantComposite  %4  %36 %36 %36
%38 = OpConstant  %5  0
%39 = OpConstantComposite  %6  %36 %37 %38
%41 = OpTypePointer Private %6
%40 = OpVariable  %41  Private %39
%43 = OpTypePointer StorageBuffer %20
%42 = OpVariable  %43  StorageBuffer
%45 = OpTypeStruct %22
%46 = OpTypePointer Uniform %45
%44 = OpVariable  %46  Uniform
%48 = OpTypeStruct %23
%49 = OpTypePointer StorageBuffer %48
%47 = OpVariable  %49  StorageBuffer
%51 = OpTypeStruct %26
%52 = OpTypePointer Uniform %51
%50 = OpVariable  %52  Uniform
%53 = OpVariable  %33  Workgroup
%56 = OpTypeFunction %2
%57 = OpTypePointer Uniform %22
%59 = OpConstant  %5  1
%60 = OpConstant  %10  1.0
%61 = OpConstantComposite  %12  %60 %60
%62 = OpConstant  %10  2.0
%63 = OpConstantComposite  %12  %62 %62
%64 = OpConstant  %10  3.0
%65 = OpConstantComposite  %12  %64 %64
%66 = OpConstantComposite  %21  %61 %63 %65
%67 = OpConstantComposite  %22  %66
%68 = OpConstant  %10  6.0
%69 = OpConstantComposite  %12  %68 %68
%70 = OpConstant  %10  5.0
%71 = OpConstantComposite  %12  %70 %70
%72 = OpConstant  %10  4.0
%73 = OpConstantComposite  %12  %72 %72
%74 = OpConstantComposite  %21  %69 %71 %73
%75 = OpConstant  %10  9.0
%76 = OpConstantComposite  %12  %75 %75
%77 = OpConstant  %10  90.0
%78 = OpConstantComposite  %12  %77 %77
%79 = OpConstant  %10  10.0
%80 = OpConstant  %10  20.0
%81 = OpConstant  %10  30.0
%82 = OpConstant  %10  40.0
%84 = OpTypePointer Function %5
%86 = OpTypePointer Function %22
%90 = OpTypePointer Uniform %21
%93 = OpTypePointer Uniform %12
%99 = OpTypePointer Uniform %10
%100 = OpConstant  %3  1
%115 = OpTypePointer Function %21
%117 = OpTypePointer Function %12
%121 = OpTypePointer Function %10
%132 = OpTypePointer Uniform %26
%134 = OpConstantNull  %25
%135 = OpConstantComposite  %26  %134
%136 = OpConstant  %10  8.0
%137 = OpConstantComposite  %12  %136 %136
%138 = OpConstant  %10  7.0
%139 = OpConstantComposite  %12  %138 %138
%140 = OpConstantComposite  %24  %137 %139 %69 %71
%143 = OpTypePointer Function %26
%147 = OpTypePointer Uniform %25
%150 = OpTypePointer Uniform %24
%172 = OpTypePointer Function %25
%174 = OpTypePointer Function %24
%190 = OpTypeFunction %10 %27
%196 = OpTypeFunction %10 %29
%203 = OpTypeFunction %2 %33
%204 = OpConstant  %3  42
%209 = OpTypeFunction %2 %35
%210 = OpConstantComposite  %31  %60 %60 %60 %60
%211 = OpConstantComposite  %31  %62 %62 %62 %62
%212 = OpConstantComposite  %34  %210 %211
%216 = OpTypePointer Input %3
%215 = OpVariable  %216  Input
%219 = OpTypePointer Output %31
%218 = OpVariable  %219  Output
%222 = OpTypePointer StorageBuffer %23
%225 = OpConstant  %10  0.0
%226 = OpConstant  %3  3
%227 = OpConstant  %5  3
%228 = OpConstant  %5  4
%229 = OpConstant  %5  5
%230 = OpConstant  %5  42
%231 = OpConstantNull  %29
%234 = OpTypePointer Function %32
%235 = OpConstantNull  %32
%240 = OpTypePointer StorageBuffer %8
%243 = OpTypePointer StorageBuffer %18
%244 = OpConstant  %3  4
%247 = OpTypePointer StorageBuffer %9
%248 = OpTypePointer StorageBuffer %10
%251 = OpTypePointer StorageBuffer %19
%254 = OpTypePointer StorageBuffer %7
%255 = OpTypePointer StorageBuffer %5
%267 = OpTypeVector %5 4
%273 = OpVariable  %219  Output
%276 = OpConstantComposite  %9  %225 %225 %225
%277 = OpConstantComposite  %9  %60 %60 %60
%278 = OpConstantComposite  %9  %62 %62 %62
%279 = OpConstantComposite  %9  %64 %64 %64
%280 = OpConstantComposite  %8  %276 %277 %278 %279
%281 = OpConstantComposite  %17  %36 %36
%282 = OpConstantComposite  %17  %100 %100
%283 = OpConstantComposite  %18  %281 %282
%284 = OpConstantNull  %23
%285 = OpConstantComposite  %31  %225 %225 %225 %225
%293 = OpConstantComposite  %31  %68 %68 %68 %68
%294 = OpConstantComposite  %31  %138 %138 %138 %138
%295 = OpConstantComposite  %34  %293 %294
%298 = OpConstantNull  %3
%300 = OpTypePointer Input %4
%299 = OpVariable  %300  Input
%302 = OpConstantNull  %4
%304 = OpTypeBool
%303 = OpTypeVector %304 3
%309 = OpConstant  %3  264
%55 = OpFunction  %2  None %56
%54 = OpLabel
%83 = OpVariable  %84  Function %59
%85 = OpVariable  %86  Function %67
%58 = OpAccessChain  %57  %44 %36
OpBranch %87
%87 = OpLabel
%88 = OpLoad  %5  %83
%89 = OpISub  %5  %88 %59
OpStore %83 %89
%91 = OpAccessChain  %90  %58 %36
%92 = OpLoad  %21  %91
%94 = OpAccessChain  %93  %58 %36 %36
%95 = OpLoad  %12  %94
%96 = OpLoad  %5  %83
%97 = OpAccessChain  %93  %58 %36 %96
%98 = OpLoad  %12  %97
%101 = OpAccessChain  %99  %58 %36 %36 %100
%102 = OpLoad  %10  %101
%103 = OpLoad  %5  %83
%104 = OpAccessChain  %99  %58 %36 %36 %103
%105 = OpLoad  %10  %104
%106 = OpLoad  %5  %83
%107 = OpAccessChain  %99  %58 %36 %106 %100
%108 = OpLoad  %10  %107
%109 = OpLoad  %5  %83
%110 = OpLoad  %5  %83
%111 = OpAccessChain  %99  %58 %36 %109 %110
%112 = OpLoad  %10  %111
%113 = OpLoad  %5  %83
%114 = OpIAdd  %5  %113 %59
OpStore %83 %114
%116 = OpAccessChain  %115  %85 %36
OpStore %116 %74
%118 = OpAccessChain  %117  %85 %36 %36
OpStore %118 %76
%119 = OpLoad  %5  %83
%120 = OpAccessChain  %117  %85 %36 %119
OpStore %120 %78
%122 = OpAccessChain  %121  %85 %36 %36 %100
OpStore %122 %79
%123 = OpLoad  %5  %83
%124 = OpAccessChain  %121  %85 %36 %36 %123
OpStore %124 %80
%125 = OpLoad  %5  %83
%126 = OpAccessChain  %121  %85 %36 %125 %100
OpStore %126 %81
%127 = OpLoad  %5  %83
%128 = OpLoad  %5  %83
%129 = OpAccessChain  %121  %85 %36 %127 %128
OpStore %129 %82
OpReturn
OpFunctionEnd
%131 = OpFunction  %2  None %56
%130 = OpLabel
%141 = OpVariable  %84  Function %59
%142 = OpVariable  %143  Function %135
%133 = OpAccessChain  %132  %50 %36
OpBranch %144
%144 = OpLabel
%145 = OpLoad  %5  %141
%146 = OpISub  %5  %145 %59
OpStore %141 %146
%148 = OpAccessChain  %147  %133 %36
%149 = OpLoad  %25  %148
%151 = OpAccessChain  %150  %133 %36 %36
%152 = OpLoad  %24  %151
%153 = OpAccessChain  %93  %133 %36 %36 %36
%154 = OpLoad  %12  %153
%155 = OpLoad  %5  %141
%156 = OpAccessChain  %93  %133 %36 %36 %155
%157 = OpLoad  %12  %156
%158 = OpAccessChain  %99  %133 %36 %36 %36 %100
%159 = OpLoad  %10  %158
%160 = OpLoad  %5  %141
%161 = OpAccessChain  %99  %133 %36 %36 %36 %160
%162 = OpLoad  %10  %161
%163 = OpLoad  %5  %141
%164 = OpAccessChain  %99  %133 %36 %36 %163 %100
%165 = OpLoad  %10  %164
%166 = OpLoad  %5  %141
%167 = OpLoad  %5  %141
%168 = OpAccessChain  %99  %133 %36 %36 %166 %167
%169 = OpLoad  %10  %168
%170 = OpLoad  %5  %141
%171 = OpIAdd  %5  %170 %59
OpStore %141 %171
%173 = OpAccessChain  %172  %142 %36
OpStore %173 %134
%175 = OpAccessChain  %174  %142 %36 %36
OpStore %175 %140
%176 = OpAccessChain  %117  %142 %36 %36 %36
OpStore %176 %76
%177 = OpLoad  %5  %141
%178 = OpAccessChain  %117  %142 %36 %36 %177
OpStore %178 %78
%179 = OpAccessChain  %121  %142 %36 %36 %36 %100
OpStore %179 %79
%180 = OpLoad  %5  %141
%181 = OpAccessChain  %121  %142 %36 %36 %36 %180
OpStore %181 %80
%182 = OpLoad  %5  %141
%183 = OpAccessChain  %121  %142 %36 %36 %182 %100
OpStore %183 %81
%184 = OpLoad  %5  %141
%185 = OpLoad  %5  %141
%186 = OpAccessChain  %121  %142 %36 %36 %184 %185
OpStore %186 %82
OpReturn
OpFunctionEnd
%189 = OpFunction  %10  None %190
%188 = OpFunctionParameter  %27
%187 = OpLabel
OpBranch %191
%191 = OpLabel
%192 = OpLoad  %10  %188
OpReturnValue %192
OpFunctionEnd
%195 = OpFunction  %10  None %196
%194 = OpFunctionParameter  %29
%193 = OpLabel
OpBranch %197
%197 = OpLabel
%198 = OpCompositeExtract  %28  %194 4
%199 = OpCompositeExtract  %10  %198 9
OpReturnValue %199
OpFunctionEnd
%202 = OpFunction  %2  None %203
%201 = OpFunctionParameter  %33
%200 = OpLabel
OpBranch %205
%205 = OpLabel
OpStore %201 %204
OpReturn
OpFunctionEnd
%208 = OpFunction  %2  None %209
%207 = OpFunctionParameter  %35
%206 = OpLabel
OpBranch %213
%213 = OpLabel
OpStore %207 %212
OpReturn
OpFunctionEnd
%220 = OpFunction  %2  None %56
%214 = OpLabel
%232 = OpVariable  %27  Function %225
%233 = OpVariable  %234  Function %235
%217 = OpLoad  %3  %215
%221 = OpAccessChain  %57  %44 %36
%223 = OpAccessChain  %222  %47 %36
%224 = OpAccessChain  %132  %50 %36
OpBranch %236
%236 = OpLabel
%237 = OpLoad  %10  %232
OpStore %232 %60
%238 = OpFunctionCall  %2  %55
%239 = OpFunctionCall  %2  %131
%241 = OpAccessChain  %240  %42 %36
%242 = OpLoad  %8  %241
%245 = OpAccessChain  %243  %42 %244
%246 = OpLoad  %18  %245
%249 = OpAccessChain  %248  %42 %36 %226 %36
%250 = OpLoad  %10  %249
%252 = OpArrayLength  %3  %42 5
%253 = OpISub  %3  %252 %14
%256 = OpAccessChain  %255  %42 %30 %253 %36
%257 = OpLoad  %5  %256
%258 = OpLoad  %23  %223
%259 = OpFunctionCall  %10  %189 %232
%260 = OpConvertFToS  %5  %250
%261 = OpCompositeConstruct  %32  %257 %260 %227 %228 %229
OpStore %233 %261
%262 = OpIAdd  %3  %217 %100
%263 = OpAccessChain  %84  %233 %262
OpStore %263 %230
%264 = OpAccessChain  %84  %233 %217
%265 = OpLoad  %5  %264
%266 = OpFunctionCall  %10  %195 %231
%268 = OpCompositeConstruct  %267  %265 %265 %265 %265
%269 = OpConvertSToF  %31  %268
%270 = OpMatrixTimesVector  %9  %242 %269
%271 = OpCompositeConstruct  %31  %270 %62
OpStore %218 %271
OpReturn
OpFunctionEnd
%274 = OpFunction  %2  None %56
%272 = OpLabel
%275 = OpAccessChain  %222  %47 %36
OpBranch %286
%286 = OpLabel
%287 = OpAccessChain  %248  %42 %36 %100 %14
OpStore %287 %60
%288 = OpAccessChain  %240  %42 %36
OpStore %288 %280
%289 = OpAccessChain  %243  %42 %244
OpStore %289 %283
%290 = OpAccessChain  %255  %42 %30 %100 %36
OpStore %290 %59
OpStore %275 %284
OpStore %273 %285
OpReturn
OpFunctionEnd
%292 = OpFunction  %2  None %56
%291 = OpLabel
%296 = OpVariable  %35  Function %295
OpBranch %297
%297 = OpLabel
%301 = OpLoad  %4  %299
%305 = OpIEqual  %303  %301 %302
%306 = OpAll  %304  %305
OpSelectionMerge %307 None
OpBranchConditional %306 %308 %307
%308 = OpLabel
OpStore %53 %298
OpBranch %307
%307 = OpLabel
OpControlBarrier %14 %14 %309
OpBranch %310
%310 = OpLabel
%311 = OpFunctionCall  %2  %202 %53
%312 = OpFunctionCall  %2  %208 %296
OpReturn
OpFunctionEnd