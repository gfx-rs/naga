; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 325
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %239 "foo_vert" %234 %237
OpEntryPoint Fragment %285 "foo_frag" %284
OpEntryPoint GLCompute %305 "assign_through_ptr" %308
OpExecutionMode %285 OriginUpperLeft
OpExecutionMode %305 LocalSize 1 1 1
OpMemberName %6 0 "a"
OpMemberName %6 1 "b"
OpMemberName %6 2 "c"
OpName %6 "GlobalConst"
OpMemberName %7 0 "value"
OpName %7 "AlignedWrapper"
OpMemberName %20 0 "_matrix"
OpMemberName %20 1 "matrix_array"
OpMemberName %20 2 "atom"
OpMemberName %20 3 "atom_arr"
OpMemberName %20 4 "arr"
OpMemberName %20 5 "data"
OpName %20 "Bar"
OpMemberName %22 0 "m"
OpName %22 "Baz"
OpMemberName %26 0 "am"
OpName %26 "MatCx2InArray"
OpName %48 "global_const"
OpName %50 "bar"
OpName %52 "baz"
OpName %55 "qux"
OpName %58 "nested_mat_cx2"
OpName %61 "val"
OpName %62 "idx"
OpName %65 "t"
OpName %69 "test_matrix_within_struct_accesses"
OpName %139 "idx"
OpName %140 "t"
OpName %144 "test_matrix_within_array_within_struct_accesses"
OpName %202 "foo"
OpName %203 "read_from_private"
OpName %208 "a"
OpName %209 "test_arr_as_arg"
OpName %215 "p"
OpName %216 "assign_through_ptr_fn"
OpName %221 "foo"
OpName %222 "assign_array_through_ptr_fn"
OpName %228 "foo"
OpName %230 "c2"
OpName %234 "vi"
OpName %239 "foo_vert"
OpName %285 "foo_frag"
OpName %302 "arr"
OpName %305 "assign_through_ptr"
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 16
OpMemberDecorate %6 2 Offset 28
OpMemberDecorate %7 0 Offset 0
OpDecorate %13 ArrayStride 16
OpDecorate %15 ArrayStride 4
OpDecorate %18 ArrayStride 8
OpDecorate %19 ArrayStride 8
OpMemberDecorate %20 0 Offset 0
OpMemberDecorate %20 0 ColMajor
OpMemberDecorate %20 0 MatrixStride 16
OpMemberDecorate %20 1 Offset 64
OpMemberDecorate %20 1 ColMajor
OpMemberDecorate %20 1 MatrixStride 8
OpMemberDecorate %20 2 Offset 96
OpMemberDecorate %20 3 Offset 100
OpMemberDecorate %20 4 Offset 144
OpMemberDecorate %20 5 Offset 160
OpDecorate %20 Block
OpMemberDecorate %22 0 Offset 0
OpMemberDecorate %22 0 ColMajor
OpMemberDecorate %22 0 MatrixStride 8
OpDecorate %25 ArrayStride 32
OpMemberDecorate %26 0 Offset 0
OpMemberDecorate %26 0 ColMajor
OpMemberDecorate %26 0 MatrixStride 8
OpDecorate %28 ArrayStride 4
OpDecorate %29 ArrayStride 40
OpDecorate %33 ArrayStride 4
OpDecorate %36 ArrayStride 16
OpDecorate %50 DescriptorSet 0
OpDecorate %50 Binding 0
OpDecorate %52 DescriptorSet 0
OpDecorate %52 Binding 1
OpDecorate %53 Block
OpMemberDecorate %53 0 Offset 0
OpDecorate %55 DescriptorSet 0
OpDecorate %55 Binding 2
OpDecorate %56 Block
OpMemberDecorate %56 0 Offset 0
OpDecorate %58 DescriptorSet 0
OpDecorate %58 Binding 3
OpDecorate %59 Block
OpMemberDecorate %59 0 Offset 0
OpDecorate %234 BuiltIn VertexIndex
OpDecorate %237 BuiltIn Position
OpDecorate %284 Location 0
OpDecorate %308 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeInt 32 0
%4 = OpTypeVector %3 3
%5 = OpTypeInt 32 1
%6 = OpTypeStruct %3 %4 %5
%7 = OpTypeStruct %5
%10 = OpTypeFloat 32
%9 = OpTypeVector %10 3
%8 = OpTypeMatrix %9 4
%12 = OpTypeVector %10 2
%11 = OpTypeMatrix %12 2
%14 = OpConstant  %3  2
%13 = OpTypeArray %11 %14
%16 = OpConstant  %3  10
%15 = OpTypeArray %5 %16
%17 = OpTypeVector %3 2
%18 = OpTypeArray %17 %14
%19 = OpTypeRuntimeArray %7
%20 = OpTypeStruct %8 %13 %5 %15 %18 %19
%21 = OpTypeMatrix %12 3
%22 = OpTypeStruct %21
%23 = OpTypeVector %5 2
%24 = OpTypeMatrix %12 4
%25 = OpTypeArray %24 %14
%26 = OpTypeStruct %25
%27 = OpTypePointer Function %10
%28 = OpTypeArray %10 %16
%30 = OpConstant  %3  5
%29 = OpTypeArray %28 %30
%31 = OpTypeVector %10 4
%32 = OpTypePointer StorageBuffer %5
%33 = OpTypeArray %5 %30
%34 = OpTypeVector %5 4
%35 = OpTypePointer Workgroup %3
%36 = OpTypeArray %31 %14
%37 = OpTypePointer Function %36
%38 = OpConstant  %3  0
%39 = OpConstantComposite  %4  %38 %38 %38
%40 = OpConstant  %5  0
%41 = OpConstantComposite  %6  %38 %39 %40
%42 = OpConstant  %5  8
%43 = OpConstant  %5  2
%44 = OpConstant  %5  10
%45 = OpConstant  %5  1
%46 = OpConstant  %5  3
%47 = OpConstant  %5  5
%49 = OpTypePointer Private %6
%48 = OpVariable  %49  Private %41
%51 = OpTypePointer StorageBuffer %20
%50 = OpVariable  %51  StorageBuffer
%53 = OpTypeStruct %22
%54 = OpTypePointer Uniform %53
%52 = OpVariable  %54  Uniform
%56 = OpTypeStruct %23
%57 = OpTypePointer StorageBuffer %56
%55 = OpVariable  %57  StorageBuffer
%59 = OpTypeStruct %26
%60 = OpTypePointer Uniform %59
%58 = OpVariable  %60  Uniform
%61 = OpVariable  %35  Workgroup
%63 = OpTypePointer Function %5
%64 = OpConstantNull  %5
%66 = OpTypePointer Function %22
%67 = OpConstantNull  %22
%70 = OpTypeFunction %2
%71 = OpTypePointer Uniform %22
%73 = OpConstant  %10  1.0
%74 = OpConstant  %10  2.0
%75 = OpConstant  %10  3.0
%76 = OpConstant  %10  6.0
%77 = OpConstant  %10  5.0
%78 = OpConstant  %10  4.0
%79 = OpConstant  %10  9.0
%80 = OpConstant  %10  90.0
%81 = OpConstant  %10  10.0
%82 = OpConstant  %10  20.0
%83 = OpConstant  %10  30.0
%84 = OpConstant  %10  40.0
%88 = OpTypePointer Uniform %21
%91 = OpTypePointer Uniform %12
%97 = OpTypePointer Uniform %10
%98 = OpConstant  %3  1
%118 = OpTypePointer Function %21
%124 = OpTypePointer Function %12
%130 = OpTypePointer Function %10
%141 = OpTypePointer Function %26
%142 = OpConstantNull  %26
%145 = OpTypePointer Uniform %26
%147 = OpConstantNull  %25
%148 = OpConstant  %10  8.0
%149 = OpConstant  %10  7.0
%153 = OpTypePointer Uniform %25
%156 = OpTypePointer Uniform %24
%179 = OpTypePointer Function %25
%181 = OpTypePointer Function %24
%204 = OpTypeFunction %10 %27
%210 = OpTypeFunction %10 %29
%217 = OpTypeFunction %2 %35
%218 = OpConstant  %3  42
%223 = OpTypeFunction %2 %37
%229 = OpConstantNull  %10
%231 = OpTypePointer Function %33
%232 = OpConstantNull  %33
%235 = OpTypePointer Input %3
%234 = OpVariable  %235  Input
%238 = OpTypePointer Output %31
%237 = OpVariable  %238  Output
%241 = OpTypePointer StorageBuffer %23
%244 = OpConstant  %10  0.0
%245 = OpConstant  %3  3
%246 = OpConstant  %5  4
%247 = OpConstant  %5  42
%248 = OpConstantNull  %29
%253 = OpTypePointer StorageBuffer %8
%256 = OpTypePointer StorageBuffer %18
%257 = OpConstant  %3  4
%260 = OpTypePointer StorageBuffer %9
%261 = OpTypePointer StorageBuffer %10
%264 = OpTypePointer StorageBuffer %19
%267 = OpTypePointer StorageBuffer %7
%284 = OpVariable  %238  Output
%287 = OpConstantNull  %23
%303 = OpConstantNull  %36
%307 = OpConstantNull  %3
%309 = OpTypePointer Input %4
%308 = OpVariable  %309  Input
%311 = OpConstantNull  %4
%313 = OpTypeBool
%312 = OpTypeVector %313 3
%318 = OpConstant  %3  264
%69 = OpFunction  %2  None %70
%68 = OpLabel
%62 = OpVariable  %63  Function %64
%65 = OpVariable  %66  Function %67
%72 = OpAccessChain  %71  %52 %38
OpBranch %85
%85 = OpLabel
OpStore %62 %45
%86 = OpLoad  %5  %62
%87 = OpISub  %5  %86 %45
OpStore %62 %87
%89 = OpAccessChain  %88  %72 %38
%90 = OpLoad  %21  %89
%92 = OpAccessChain  %91  %72 %38 %38
%93 = OpLoad  %12  %92
%94 = OpLoad  %5  %62
%95 = OpAccessChain  %91  %72 %38 %94
%96 = OpLoad  %12  %95
%99 = OpAccessChain  %97  %72 %38 %38 %98
%100 = OpLoad  %10  %99
%101 = OpLoad  %5  %62
%102 = OpAccessChain  %97  %72 %38 %38 %101
%103 = OpLoad  %10  %102
%104 = OpLoad  %5  %62
%105 = OpAccessChain  %97  %72 %38 %104 %98
%106 = OpLoad  %10  %105
%107 = OpLoad  %5  %62
%108 = OpLoad  %5  %62
%109 = OpAccessChain  %97  %72 %38 %107 %108
%110 = OpLoad  %10  %109
%111 = OpCompositeConstruct  %12  %73 %73
%112 = OpCompositeConstruct  %12  %74 %74
%113 = OpCompositeConstruct  %12  %75 %75
%114 = OpCompositeConstruct  %21  %111 %112 %113
%115 = OpCompositeConstruct  %22  %114
OpStore %65 %115
%116 = OpLoad  %5  %62
%117 = OpIAdd  %5  %116 %45
OpStore %62 %117
%119 = OpCompositeConstruct  %12  %76 %76
%120 = OpCompositeConstruct  %12  %77 %77
%121 = OpCompositeConstruct  %12  %78 %78
%122 = OpCompositeConstruct  %21  %119 %120 %121
%123 = OpAccessChain  %118  %65 %38
OpStore %123 %122
%125 = OpCompositeConstruct  %12  %79 %79
%126 = OpAccessChain  %124  %65 %38 %38
OpStore %126 %125
%127 = OpLoad  %5  %62
%128 = OpCompositeConstruct  %12  %80 %80
%129 = OpAccessChain  %124  %65 %38 %127
OpStore %129 %128
%131 = OpAccessChain  %130  %65 %38 %38 %98
OpStore %131 %81
%132 = OpLoad  %5  %62
%133 = OpAccessChain  %130  %65 %38 %38 %132
OpStore %133 %82
%134 = OpLoad  %5  %62
%135 = OpAccessChain  %130  %65 %38 %134 %98
OpStore %135 %83
%136 = OpLoad  %5  %62
%137 = OpLoad  %5  %62
%138 = OpAccessChain  %130  %65 %38 %136 %137
OpStore %138 %84
OpReturn
OpFunctionEnd
%144 = OpFunction  %2  None %70
%143 = OpLabel
%139 = OpVariable  %63  Function %64
%140 = OpVariable  %141  Function %142
%146 = OpAccessChain  %145  %58 %38
OpBranch %150
%150 = OpLabel
OpStore %139 %45
%151 = OpLoad  %5  %139
%152 = OpISub  %5  %151 %45
OpStore %139 %152
%154 = OpAccessChain  %153  %146 %38
%155 = OpLoad  %25  %154
%157 = OpAccessChain  %156  %146 %38 %38
%158 = OpLoad  %24  %157
%159 = OpAccessChain  %91  %146 %38 %38 %38
%160 = OpLoad  %12  %159
%161 = OpLoad  %5  %139
%162 = OpAccessChain  %91  %146 %38 %38 %161
%163 = OpLoad  %12  %162
%164 = OpAccessChain  %97  %146 %38 %38 %38 %98
%165 = OpLoad  %10  %164
%166 = OpLoad  %5  %139
%167 = OpAccessChain  %97  %146 %38 %38 %38 %166
%168 = OpLoad  %10  %167
%169 = OpLoad  %5  %139
%170 = OpAccessChain  %97  %146 %38 %38 %169 %98
%171 = OpLoad  %10  %170
%172 = OpLoad  %5  %139
%173 = OpLoad  %5  %139
%174 = OpAccessChain  %97  %146 %38 %38 %172 %173
%175 = OpLoad  %10  %174
%176 = OpCompositeConstruct  %26  %147
OpStore %140 %176
%177 = OpLoad  %5  %139
%178 = OpIAdd  %5  %177 %45
OpStore %139 %178
%180 = OpAccessChain  %179  %140 %38
OpStore %180 %147
%182 = OpCompositeConstruct  %12  %148 %148
%183 = OpCompositeConstruct  %12  %149 %149
%184 = OpCompositeConstruct  %12  %76 %76
%185 = OpCompositeConstruct  %12  %77 %77
%186 = OpCompositeConstruct  %24  %182 %183 %184 %185
%187 = OpAccessChain  %181  %140 %38 %38
OpStore %187 %186
%188 = OpCompositeConstruct  %12  %79 %79
%189 = OpAccessChain  %124  %140 %38 %38 %38
OpStore %189 %188
%190 = OpLoad  %5  %139
%191 = OpCompositeConstruct  %12  %80 %80
%192 = OpAccessChain  %124  %140 %38 %38 %190
OpStore %192 %191
%193 = OpAccessChain  %130  %140 %38 %38 %38 %98
OpStore %193 %81
%194 = OpLoad  %5  %139
%195 = OpAccessChain  %130  %140 %38 %38 %38 %194
OpStore %195 %82
%196 = OpLoad  %5  %139
%197 = OpAccessChain  %130  %140 %38 %38 %196 %98
OpStore %197 %83
%198 = OpLoad  %5  %139
%199 = OpLoad  %5  %139
%200 = OpAccessChain  %130  %140 %38 %38 %198 %199
OpStore %200 %84
OpReturn
OpFunctionEnd
%203 = OpFunction  %10  None %204
%202 = OpFunctionParameter  %27
%201 = OpLabel
OpBranch %205
%205 = OpLabel
%206 = OpLoad  %10  %202
OpReturnValue %206
OpFunctionEnd
%209 = OpFunction  %10  None %210
%208 = OpFunctionParameter  %29
%207 = OpLabel
OpBranch %211
%211 = OpLabel
%212 = OpCompositeExtract  %28  %208 4
%213 = OpCompositeExtract  %10  %212 9
OpReturnValue %213
OpFunctionEnd
%216 = OpFunction  %2  None %217
%215 = OpFunctionParameter  %35
%214 = OpLabel
OpBranch %219
%219 = OpLabel
OpStore %215 %218
OpReturn
OpFunctionEnd
%222 = OpFunction  %2  None %223
%221 = OpFunctionParameter  %37
%220 = OpLabel
OpBranch %224
%224 = OpLabel
%225 = OpCompositeConstruct  %31  %73 %73 %73 %73
%226 = OpCompositeConstruct  %31  %74 %74 %74 %74
%227 = OpCompositeConstruct  %36  %225 %226
OpStore %221 %227
OpReturn
OpFunctionEnd
%239 = OpFunction  %2  None %70
%233 = OpLabel
%228 = OpVariable  %27  Function %229
%230 = OpVariable  %231  Function %232
%236 = OpLoad  %3  %234
%240 = OpAccessChain  %71  %52 %38
%242 = OpAccessChain  %241  %55 %38
%243 = OpAccessChain  %145  %58 %38
OpBranch %249
%249 = OpLabel
OpStore %228 %244
%250 = OpLoad  %10  %228
OpStore %228 %73
%251 = OpFunctionCall  %2  %69
%252 = OpFunctionCall  %2  %144
%254 = OpAccessChain  %253  %50 %38
%255 = OpLoad  %8  %254
%258 = OpAccessChain  %256  %50 %257
%259 = OpLoad  %18  %258
%262 = OpAccessChain  %261  %50 %38 %245 %38
%263 = OpLoad  %10  %262
%265 = OpArrayLength  %3  %50 5
%266 = OpISub  %3  %265 %14
%268 = OpAccessChain  %32  %50 %30 %266 %38
%269 = OpLoad  %5  %268
%270 = OpLoad  %23  %242
%271 = OpFunctionCall  %10  %203 %228
%272 = OpConvertFToS  %5  %263
%273 = OpCompositeConstruct  %33  %269 %272 %46 %246 %47
OpStore %230 %273
%274 = OpIAdd  %3  %236 %98
%275 = OpAccessChain  %63  %230 %274
OpStore %275 %247
%276 = OpAccessChain  %63  %230 %236
%277 = OpLoad  %5  %276
%278 = OpFunctionCall  %10  %209 %248
%279 = OpCompositeConstruct  %34  %277 %277 %277 %277
%280 = OpConvertSToF  %31  %279
%281 = OpMatrixTimesVector  %9  %255 %280
%282 = OpCompositeConstruct  %31  %281 %74
OpStore %237 %282
OpReturn
OpFunctionEnd
%285 = OpFunction  %2  None %70
%283 = OpLabel
%286 = OpAccessChain  %241  %55 %38
OpBranch %288
%288 = OpLabel
%289 = OpAccessChain  %261  %50 %38 %98 %14
OpStore %289 %73
%290 = OpCompositeConstruct  %9  %244 %244 %244
%291 = OpCompositeConstruct  %9  %73 %73 %73
%292 = OpCompositeConstruct  %9  %74 %74 %74
%293 = OpCompositeConstruct  %9  %75 %75 %75
%294 = OpCompositeConstruct  %8  %290 %291 %292 %293
%295 = OpAccessChain  %253  %50 %38
OpStore %295 %294
%296 = OpCompositeConstruct  %17  %38 %38
%297 = OpCompositeConstruct  %17  %98 %98
%298 = OpCompositeConstruct  %18  %296 %297
%299 = OpAccessChain  %256  %50 %257
OpStore %299 %298
%300 = OpAccessChain  %32  %50 %30 %98 %38
OpStore %300 %45
OpStore %286 %287
%301 = OpCompositeConstruct  %31  %244 %244 %244 %244
OpStore %284 %301
OpReturn
OpFunctionEnd
%305 = OpFunction  %2  None %70
%304 = OpLabel
%302 = OpVariable  %37  Function %303
OpBranch %306
%306 = OpLabel
%310 = OpLoad  %4  %308
%314 = OpIEqual  %312  %310 %311
%315 = OpAll  %313  %314
OpSelectionMerge %316 None
OpBranchConditional %315 %317 %316
%317 = OpLabel
OpStore %61 %307
OpBranch %316
%316 = OpLabel
OpControlBarrier %14 %14 %318
OpBranch %319
%319 = OpLabel
%320 = OpCompositeConstruct  %31  %76 %76 %76 %76
%321 = OpCompositeConstruct  %31  %149 %149 %149 %149
%322 = OpCompositeConstruct  %36  %320 %321
OpStore %302 %322
%323 = OpFunctionCall  %2  %216 %61
%324 = OpFunctionCall  %2  %222 %302
OpReturn
OpFunctionEnd