; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 223
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %146 "foo_vert" %141 %144
OpEntryPoint Fragment %183 "foo_frag" %182
OpEntryPoint GLCompute %200 "atomics"
OpExecutionMode %183 OriginUpperLeft
OpExecutionMode %200 LocalSize 1 1 1
OpSource GLSL 450
OpMemberName %31 0 "value"
OpName %31 "AlignedWrapper"
OpMemberName %40 0 "matrix"
OpMemberName %40 1 "matrix_array"
OpMemberName %40 2 "atom"
OpMemberName %40 3 "arr"
OpMemberName %40 4 "data"
OpName %40 "Bar"
OpMemberName %42 0 "m"
OpName %42 "Baz"
OpName %49 "bar"
OpName %51 "baz"
OpName %54 "idx"
OpName %56 "_"
OpName %58 "_"
OpName %60 "_"
OpName %61 "_"
OpName %62 "_"
OpName %63 "_"
OpName %64 "_"
OpName %65 "t"
OpName %68 "test_matrix_within_struct_accesses"
OpName %125 "foo"
OpName %126 "read_from_private"
OpName %131 "a"
OpName %132 "test_arr_as_arg"
OpName %136 "foo"
OpName %137 "c"
OpName %139 "_"
OpName %141 "vi"
OpName %146 "foo_vert"
OpName %183 "foo_frag"
OpName %198 "tmp"
OpName %200 "atomics"
OpMemberDecorate %31 0 Offset 0
OpDecorate %36 ArrayStride 16
OpDecorate %38 ArrayStride 8
OpDecorate %39 ArrayStride 8
OpMemberDecorate %40 0 Offset 0
OpMemberDecorate %40 0 ColMajor
OpMemberDecorate %40 0 MatrixStride 16
OpMemberDecorate %40 1 Offset 64
OpMemberDecorate %40 1 ColMajor
OpMemberDecorate %40 1 MatrixStride 8
OpMemberDecorate %40 2 Offset 96
OpMemberDecorate %40 3 Offset 104
OpMemberDecorate %40 4 Offset 120
OpMemberDecorate %42 0 Offset 0
OpMemberDecorate %42 0 ColMajor
OpMemberDecorate %42 0 MatrixStride 8
OpDecorate %44 ArrayStride 4
OpDecorate %47 ArrayStride 4
OpDecorate %49 DescriptorSet 0
OpDecorate %49 Binding 0
OpDecorate %40 Block
OpDecorate %51 DescriptorSet 0
OpDecorate %51 Binding 1
OpDecorate %52 Block
OpMemberDecorate %52 0 Offset 0
OpDecorate %141 BuiltIn VertexIndex
OpDecorate %144 BuiltIn Position
OpDecorate %182 Location 0
%2 = OpTypeVoid
%4 = OpTypeInt 32 1
%3 = OpConstant  %4  2
%5 = OpConstant  %4  9
%6 = OpConstant  %4  1
%7 = OpConstant  %4  0
%9 = OpTypeFloat 32
%8 = OpConstant  %9  1.0
%10 = OpConstant  %9  2.0
%11 = OpConstant  %9  3.0
%12 = OpConstant  %9  6.0
%13 = OpConstant  %9  5.0
%14 = OpConstant  %9  4.0
%15 = OpConstant  %9  9.0
%16 = OpConstant  %9  90.0
%17 = OpConstant  %9  10.0
%18 = OpConstant  %9  20.0
%19 = OpConstant  %9  30.0
%20 = OpConstant  %9  40.0
%21 = OpConstant  %9  0.0
%23 = OpTypeInt 32 0
%22 = OpConstant  %23  3
%24 = OpConstant  %23  2
%25 = OpConstant  %4  5
%26 = OpConstant  %4  3
%27 = OpConstant  %4  4
%28 = OpConstant  %23  1
%29 = OpConstant  %4  42
%30 = OpConstant  %23  0
%31 = OpTypeStruct %4
%33 = OpTypeVector %9 3
%32 = OpTypeMatrix %33 4
%35 = OpTypeVector %9 2
%34 = OpTypeMatrix %35 2
%36 = OpTypeArray %34 %3
%37 = OpTypeVector %23 2
%38 = OpTypeArray %37 %3
%39 = OpTypeRuntimeArray %31
%40 = OpTypeStruct %32 %36 %4 %38 %39
%41 = OpTypeMatrix %35 3
%42 = OpTypeStruct %41
%43 = OpTypePointer Function %9
%44 = OpTypeArray %9 %6
%45 = OpTypeVector %9 4
%46 = OpTypePointer StorageBuffer %4
%47 = OpTypeArray %4 %25
%48 = OpConstantComposite  %44  %21
%50 = OpTypePointer StorageBuffer %40
%49 = OpVariable  %50  StorageBuffer
%52 = OpTypeStruct %42
%53 = OpTypePointer Uniform %52
%51 = OpVariable  %53  Uniform
%55 = OpTypePointer Function %4
%57 = OpTypePointer Function %41
%59 = OpTypePointer Function %35
%66 = OpTypePointer Function %42
%69 = OpTypeFunction %2
%70 = OpTypePointer Uniform %42
%75 = OpTypePointer Uniform %41
%78 = OpTypePointer Uniform %35
%84 = OpTypePointer Uniform %9
%109 = OpTypePointer Function %35
%115 = OpTypePointer Function %9
%127 = OpTypeFunction %9 %43
%133 = OpTypeFunction %9 %44
%138 = OpTypePointer Function %47
%142 = OpTypePointer Input %23
%141 = OpVariable  %142  Input
%145 = OpTypePointer Output %45
%144 = OpVariable  %145  Output
%151 = OpTypePointer StorageBuffer %32
%154 = OpTypePointer StorageBuffer %38
%157 = OpTypePointer StorageBuffer %33
%158 = OpTypePointer StorageBuffer %9
%161 = OpTypePointer StorageBuffer %39
%164 = OpTypePointer StorageBuffer %31
%165 = OpConstant  %23  4
%176 = OpTypeVector %4 4
%182 = OpVariable  %145  Output
%202 = OpTypePointer StorageBuffer %4
%205 = OpConstant  %23  64
%68 = OpFunction  %2  None %69
%67 = OpLabel
%63 = OpVariable  %43  Function
%60 = OpVariable  %59  Function
%54 = OpVariable  %55  Function %5
%64 = OpVariable  %43  Function
%61 = OpVariable  %43  Function
%56 = OpVariable  %57  Function
%65 = OpVariable  %66  Function
%62 = OpVariable  %43  Function
%58 = OpVariable  %59  Function
%71 = OpAccessChain  %70  %51 %30
OpBranch %72
%72 = OpLabel
%73 = OpLoad  %4  %54
%74 = OpISub  %4  %73 %6
OpStore %54 %74
%76 = OpAccessChain  %75  %71 %30
%77 = OpLoad  %41  %76
OpStore %56 %77
%79 = OpAccessChain  %78  %71 %30 %30
%80 = OpLoad  %35  %79
OpStore %58 %80
%81 = OpLoad  %4  %54
%82 = OpAccessChain  %78  %71 %30 %81
%83 = OpLoad  %35  %82
OpStore %60 %83
%85 = OpAccessChain  %84  %71 %30 %30 %28
%86 = OpLoad  %9  %85
OpStore %61 %86
%87 = OpLoad  %4  %54
%88 = OpAccessChain  %84  %71 %30 %30 %87
%89 = OpLoad  %9  %88
OpStore %62 %89
%90 = OpLoad  %4  %54
%91 = OpAccessChain  %84  %71 %30 %90 %28
%92 = OpLoad  %9  %91
OpStore %63 %92
%93 = OpLoad  %4  %54
%94 = OpLoad  %4  %54
%95 = OpAccessChain  %84  %71 %30 %93 %94
%96 = OpLoad  %9  %95
OpStore %64 %96
%97 = OpCompositeConstruct  %35  %8 %8
%98 = OpCompositeConstruct  %35  %10 %10
%99 = OpCompositeConstruct  %35  %11 %11
%100 = OpCompositeConstruct  %41  %97 %98 %99
%101 = OpCompositeConstruct  %42  %100
OpStore %65 %101
%102 = OpLoad  %4  %54
%103 = OpIAdd  %4  %102 %6
OpStore %54 %103
%104 = OpCompositeConstruct  %35  %12 %12
%105 = OpCompositeConstruct  %35  %13 %13
%106 = OpCompositeConstruct  %35  %14 %14
%107 = OpCompositeConstruct  %41  %104 %105 %106
%108 = OpAccessChain  %57  %65 %30
OpStore %108 %107
%110 = OpCompositeConstruct  %35  %15 %15
%111 = OpAccessChain  %109  %65 %30 %30
OpStore %111 %110
%112 = OpLoad  %4  %54
%113 = OpCompositeConstruct  %35  %16 %16
%114 = OpAccessChain  %109  %65 %30 %112
OpStore %114 %113
%116 = OpAccessChain  %115  %65 %30 %30 %28
OpStore %116 %17
%117 = OpLoad  %4  %54
%118 = OpAccessChain  %115  %65 %30 %30 %117
OpStore %118 %18
%119 = OpLoad  %4  %54
%120 = OpAccessChain  %115  %65 %30 %119 %28
OpStore %120 %19
%121 = OpLoad  %4  %54
%122 = OpLoad  %4  %54
%123 = OpAccessChain  %115  %65 %30 %121 %122
OpStore %123 %20
OpReturn
OpFunctionEnd
%126 = OpFunction  %9  None %127
%125 = OpFunctionParameter  %43
%124 = OpLabel
OpBranch %128
%128 = OpLabel
%129 = OpLoad  %9  %125
OpReturnValue %129
OpFunctionEnd
%132 = OpFunction  %9  None %133
%131 = OpFunctionParameter  %44
%130 = OpLabel
OpBranch %134
%134 = OpLabel
%135 = OpCompositeExtract  %9  %131 0
OpReturnValue %135
OpFunctionEnd
%146 = OpFunction  %2  None %69
%140 = OpLabel
%136 = OpVariable  %43  Function %21
%137 = OpVariable  %138  Function
%139 = OpVariable  %43  Function
%143 = OpLoad  %23  %141
%147 = OpAccessChain  %70  %51 %30
OpBranch %148
%148 = OpLabel
%149 = OpLoad  %9  %136
OpStore %136 %8
%150 = OpFunctionCall  %2  %68
%152 = OpAccessChain  %151  %49 %30
%153 = OpLoad  %32  %152
%155 = OpAccessChain  %154  %49 %22
%156 = OpLoad  %38  %155
%159 = OpAccessChain  %158  %49 %30 %22 %30
%160 = OpLoad  %9  %159
%162 = OpArrayLength  %23  %49 4
%163 = OpISub  %23  %162 %24
%166 = OpAccessChain  %46  %49 %165 %163 %30
%167 = OpLoad  %4  %166
%168 = OpFunctionCall  %9  %126 %136
%169 = OpConvertFToS  %4  %160
%170 = OpCompositeConstruct  %47  %167 %169 %26 %27 %25
OpStore %137 %170
%171 = OpIAdd  %23  %143 %28
%172 = OpAccessChain  %55  %137 %171
OpStore %172 %29
%173 = OpAccessChain  %55  %137 %143
%174 = OpLoad  %4  %173
%175 = OpFunctionCall  %9  %132 %48
OpStore %139 %175
%177 = OpCompositeConstruct  %176  %174 %174 %174 %174
%178 = OpConvertSToF  %45  %177
%179 = OpMatrixTimesVector  %33  %153 %178
%180 = OpCompositeConstruct  %45  %179 %10
OpStore %144 %180
OpReturn
OpFunctionEnd
%183 = OpFunction  %2  None %69
%181 = OpLabel
OpBranch %184
%184 = OpLabel
%185 = OpAccessChain  %158  %49 %30 %28 %24
OpStore %185 %8
%186 = OpCompositeConstruct  %33  %21 %21 %21
%187 = OpCompositeConstruct  %33  %8 %8 %8
%188 = OpCompositeConstruct  %33  %10 %10 %10
%189 = OpCompositeConstruct  %33  %11 %11 %11
%190 = OpCompositeConstruct  %32  %186 %187 %188 %189
%191 = OpAccessChain  %151  %49 %30
OpStore %191 %190
%192 = OpCompositeConstruct  %37  %30 %30
%193 = OpCompositeConstruct  %37  %28 %28
%194 = OpCompositeConstruct  %38  %192 %193
%195 = OpAccessChain  %154  %49 %22
OpStore %195 %194
%196 = OpAccessChain  %46  %49 %165 %28 %30
OpStore %196 %6
%197 = OpCompositeConstruct  %45  %21 %21 %21 %21
OpStore %182 %197
OpReturn
OpFunctionEnd
%200 = OpFunction  %2  None %69
%199 = OpLabel
%198 = OpVariable  %55  Function
OpBranch %201
%201 = OpLabel
%203 = OpAccessChain  %202  %49 %24
%204 = OpAtomicLoad  %4  %203 %6 %205
%207 = OpAccessChain  %202  %49 %24
%206 = OpAtomicIAdd  %4  %207 %6 %205 %25
OpStore %198 %206
%209 = OpAccessChain  %202  %49 %24
%208 = OpAtomicISub  %4  %209 %6 %205 %25
OpStore %198 %208
%211 = OpAccessChain  %202  %49 %24
%210 = OpAtomicAnd  %4  %211 %6 %205 %25
OpStore %198 %210
%213 = OpAccessChain  %202  %49 %24
%212 = OpAtomicOr  %4  %213 %6 %205 %25
OpStore %198 %212
%215 = OpAccessChain  %202  %49 %24
%214 = OpAtomicXor  %4  %215 %6 %205 %25
OpStore %198 %214
%217 = OpAccessChain  %202  %49 %24
%216 = OpAtomicSMin  %4  %217 %6 %205 %25
OpStore %198 %216
%219 = OpAccessChain  %202  %49 %24
%218 = OpAtomicSMax  %4  %219 %6 %205 %25
OpStore %198 %218
%221 = OpAccessChain  %202  %49 %24
%220 = OpAtomicExchange  %4  %221 %6 %205 %25
OpStore %198 %220
%222 = OpAccessChain  %202  %49 %24
OpAtomicStore %222 %6 %205 %204
OpReturn
OpFunctionEnd