; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 316
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %227 "foo_vert" %222 %225
OpEntryPoint Fragment %277 "foo_frag" %276
OpEntryPoint GLCompute %295 "assign_through_ptr" %302
OpExecutionMode %277 OriginUpperLeft
OpExecutionMode %295 LocalSize 1 1 1
OpMemberName %6 0 "a"
OpMemberName %6 1 "b"
OpMemberName %6 2 "c"
OpName %6 "GlobalConst"
OpMemberName %7 0 "value"
OpName %7 "AlignedWrapper"
OpMemberName %20 0 "_matrix"
OpMemberName %20 1 "matrix_array"
OpMemberName %20 2 "atom"
OpMemberName %20 3 "atom_arr"
OpMemberName %20 4 "arr"
OpMemberName %20 5 "data"
OpName %20 "Bar"
OpMemberName %22 0 "m"
OpName %22 "Baz"
OpMemberName %26 0 "am"
OpName %26 "MatCx2InArray"
OpName %48 "global_const"
OpName %50 "bar"
OpName %52 "baz"
OpName %55 "qux"
OpName %58 "nested_mat_cx2"
OpName %61 "val"
OpName %63 "test_matrix_within_struct_accesses"
OpName %90 "idx"
OpName %92 "t"
OpName %138 "test_matrix_within_array_within_struct_accesses"
OpName %148 "idx"
OpName %149 "t"
OpName %195 "foo"
OpName %196 "read_from_private"
OpName %201 "a"
OpName %202 "test_arr_as_arg"
OpName %208 "p"
OpName %209 "assign_through_ptr_fn"
OpName %214 "foo"
OpName %215 "assign_array_through_ptr_fn"
OpName %222 "vi"
OpName %227 "foo_vert"
OpName %237 "foo"
OpName %238 "c2"
OpName %277 "foo_frag"
OpName %295 "assign_through_ptr"
OpName %299 "arr"
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 16
OpMemberDecorate %6 2 Offset 28
OpMemberDecorate %7 0 Offset 0
OpDecorate %13 ArrayStride 16
OpDecorate %15 ArrayStride 4
OpDecorate %18 ArrayStride 8
OpDecorate %19 ArrayStride 8
OpMemberDecorate %20 0 Offset 0
OpMemberDecorate %20 0 ColMajor
OpMemberDecorate %20 0 MatrixStride 16
OpMemberDecorate %20 1 Offset 64
OpMemberDecorate %20 1 ColMajor
OpMemberDecorate %20 1 MatrixStride 8
OpMemberDecorate %20 2 Offset 96
OpMemberDecorate %20 3 Offset 100
OpMemberDecorate %20 4 Offset 144
OpMemberDecorate %20 5 Offset 160
OpDecorate %20 Block
OpMemberDecorate %22 0 Offset 0
OpMemberDecorate %22 0 ColMajor
OpMemberDecorate %22 0 MatrixStride 8
OpDecorate %25 ArrayStride 32
OpMemberDecorate %26 0 Offset 0
OpMemberDecorate %26 0 ColMajor
OpMemberDecorate %26 0 MatrixStride 8
OpDecorate %28 ArrayStride 4
OpDecorate %29 ArrayStride 40
OpDecorate %33 ArrayStride 4
OpDecorate %36 ArrayStride 16
OpDecorate %50 DescriptorSet 0
OpDecorate %50 Binding 0
OpDecorate %52 DescriptorSet 0
OpDecorate %52 Binding 1
OpDecorate %53 Block
OpMemberDecorate %53 0 Offset 0
OpDecorate %55 DescriptorSet 0
OpDecorate %55 Binding 2
OpDecorate %56 Block
OpMemberDecorate %56 0 Offset 0
OpDecorate %58 DescriptorSet 0
OpDecorate %58 Binding 3
OpDecorate %59 Block
OpMemberDecorate %59 0 Offset 0
OpDecorate %222 BuiltIn VertexIndex
OpDecorate %225 BuiltIn Position
OpDecorate %276 Location 0
OpDecorate %302 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeInt 32 0
%4 = OpTypeVector %3 3
%5 = OpTypeInt 32 1
%6 = OpTypeStruct %3 %4 %5
%7 = OpTypeStruct %5
%10 = OpTypeFloat 32
%9 = OpTypeVector %10 3
%8 = OpTypeMatrix %9 4
%12 = OpTypeVector %10 2
%11 = OpTypeMatrix %12 2
%14 = OpConstant  %3  2
%13 = OpTypeArray %11 %14
%16 = OpConstant  %3  10
%15 = OpTypeArray %5 %16
%17 = OpTypeVector %3 2
%18 = OpTypeArray %17 %14
%19 = OpTypeRuntimeArray %7
%20 = OpTypeStruct %8 %13 %5 %15 %18 %19
%21 = OpTypeMatrix %12 3
%22 = OpTypeStruct %21
%23 = OpTypeVector %5 2
%24 = OpTypeMatrix %12 4
%25 = OpTypeArray %24 %14
%26 = OpTypeStruct %25
%27 = OpTypePointer Function %10
%28 = OpTypeArray %10 %16
%30 = OpConstant  %3  5
%29 = OpTypeArray %28 %30
%31 = OpTypeVector %10 4
%32 = OpTypePointer StorageBuffer %5
%33 = OpTypeArray %5 %30
%34 = OpTypeVector %5 4
%35 = OpTypePointer Workgroup %3
%36 = OpTypeArray %31 %14
%37 = OpTypePointer Function %36
%38 = OpConstant  %3  0
%39 = OpConstantComposite  %4  %38 %38 %38
%40 = OpConstant  %5  0
%41 = OpConstantComposite  %6  %38 %39 %40
%42 = OpConstant  %5  8
%43 = OpConstant  %5  2
%44 = OpConstant  %5  10
%45 = OpConstant  %5  1
%46 = OpConstant  %5  3
%47 = OpConstant  %5  5
%49 = OpTypePointer Private %6
%48 = OpVariable  %49  Private %41
%51 = OpTypePointer StorageBuffer %20
%50 = OpVariable  %51  StorageBuffer
%53 = OpTypeStruct %22
%54 = OpTypePointer Uniform %53
%52 = OpVariable  %54  Uniform
%56 = OpTypeStruct %23
%57 = OpTypePointer StorageBuffer %56
%55 = OpVariable  %57  StorageBuffer
%59 = OpTypeStruct %26
%60 = OpTypePointer Uniform %59
%58 = OpVariable  %60  Uniform
%61 = OpVariable  %35  Workgroup
%64 = OpTypeFunction %2
%65 = OpTypePointer Uniform %22
%67 = OpConstant  %10  1.0
%68 = OpConstantComposite  %12  %67 %67
%69 = OpConstant  %10  2.0
%70 = OpConstantComposite  %12  %69 %69
%71 = OpConstant  %10  3.0
%72 = OpConstantComposite  %12  %71 %71
%73 = OpConstantComposite  %21  %68 %70 %72
%74 = OpConstantComposite  %22  %73
%75 = OpConstant  %10  6.0
%76 = OpConstantComposite  %12  %75 %75
%77 = OpConstant  %10  5.0
%78 = OpConstantComposite  %12  %77 %77
%79 = OpConstant  %10  4.0
%80 = OpConstantComposite  %12  %79 %79
%81 = OpConstantComposite  %21  %76 %78 %80
%82 = OpConstant  %10  9.0
%83 = OpConstantComposite  %12  %82 %82
%84 = OpConstant  %10  90.0
%85 = OpConstantComposite  %12  %84 %84
%86 = OpConstant  %10  10.0
%87 = OpConstant  %10  20.0
%88 = OpConstant  %10  30.0
%89 = OpConstant  %10  40.0
%91 = OpTypePointer Function %5
%93 = OpTypePointer Function %22
%97 = OpTypePointer Uniform %21
%100 = OpTypePointer Uniform %12
%106 = OpTypePointer Uniform %10
%107 = OpConstant  %3  1
%122 = OpTypePointer Function %21
%124 = OpTypePointer Function %12
%128 = OpTypePointer Function %10
%139 = OpTypePointer Uniform %26
%141 = OpConstantNull  %25
%142 = OpConstantComposite  %26  %141
%143 = OpConstant  %10  8.0
%144 = OpConstantComposite  %12  %143 %143
%145 = OpConstant  %10  7.0
%146 = OpConstantComposite  %12  %145 %145
%147 = OpConstantComposite  %24  %144 %146 %76 %78
%150 = OpTypePointer Function %26
%154 = OpTypePointer Uniform %25
%157 = OpTypePointer Uniform %24
%179 = OpTypePointer Function %25
%181 = OpTypePointer Function %24
%197 = OpTypeFunction %10 %27
%203 = OpTypeFunction %10 %29
%210 = OpTypeFunction %2 %35
%211 = OpConstant  %3  42
%216 = OpTypeFunction %2 %37
%217 = OpConstantComposite  %31  %67 %67 %67 %67
%218 = OpConstantComposite  %31  %69 %69 %69 %69
%219 = OpConstantComposite  %36  %217 %218
%223 = OpTypePointer Input %3
%222 = OpVariable  %223  Input
%226 = OpTypePointer Output %31
%225 = OpVariable  %226  Output
%229 = OpTypePointer StorageBuffer %23
%232 = OpConstant  %10  0.0
%233 = OpConstant  %3  3
%234 = OpConstant  %5  4
%235 = OpConstant  %5  42
%236 = OpConstantNull  %29
%239 = OpTypePointer Function %33
%240 = OpConstantNull  %33
%245 = OpTypePointer StorageBuffer %8
%248 = OpTypePointer StorageBuffer %18
%249 = OpConstant  %3  4
%252 = OpTypePointer StorageBuffer %9
%253 = OpTypePointer StorageBuffer %10
%256 = OpTypePointer StorageBuffer %19
%259 = OpTypePointer StorageBuffer %7
%276 = OpVariable  %226  Output
%279 = OpConstantComposite  %9  %232 %232 %232
%280 = OpConstantComposite  %9  %67 %67 %67
%281 = OpConstantComposite  %9  %69 %69 %69
%282 = OpConstantComposite  %9  %71 %71 %71
%283 = OpConstantComposite  %8  %279 %280 %281 %282
%284 = OpConstantComposite  %17  %38 %38
%285 = OpConstantComposite  %17  %107 %107
%286 = OpConstantComposite  %18  %284 %285
%287 = OpConstantNull  %23
%288 = OpConstantComposite  %31  %232 %232 %232 %232
%296 = OpConstantComposite  %31  %75 %75 %75 %75
%297 = OpConstantComposite  %31  %145 %145 %145 %145
%298 = OpConstantComposite  %36  %296 %297
%301 = OpConstantNull  %3
%303 = OpTypePointer Input %4
%302 = OpVariable  %303  Input
%305 = OpConstantNull  %4
%307 = OpTypeBool
%306 = OpTypeVector %307 3
%312 = OpConstant  %3  264
%63 = OpFunction  %2  None %64
%62 = OpLabel
%90 = OpVariable  %91  Function %45
%92 = OpVariable  %93  Function %74
%66 = OpAccessChain  %65  %52 %38
OpBranch %94
%94 = OpLabel
%95 = OpLoad  %5  %90
%96 = OpISub  %5  %95 %45
OpStore %90 %96
%98 = OpAccessChain  %97  %66 %38
%99 = OpLoad  %21  %98
%101 = OpAccessChain  %100  %66 %38 %38
%102 = OpLoad  %12  %101
%103 = OpLoad  %5  %90
%104 = OpAccessChain  %100  %66 %38 %103
%105 = OpLoad  %12  %104
%108 = OpAccessChain  %106  %66 %38 %38 %107
%109 = OpLoad  %10  %108
%110 = OpLoad  %5  %90
%111 = OpAccessChain  %106  %66 %38 %38 %110
%112 = OpLoad  %10  %111
%113 = OpLoad  %5  %90
%114 = OpAccessChain  %106  %66 %38 %113 %107
%115 = OpLoad  %10  %114
%116 = OpLoad  %5  %90
%117 = OpLoad  %5  %90
%118 = OpAccessChain  %106  %66 %38 %116 %117
%119 = OpLoad  %10  %118
%120 = OpLoad  %5  %90
%121 = OpIAdd  %5  %120 %45
OpStore %90 %121
%123 = OpAccessChain  %122  %92 %38
OpStore %123 %81
%125 = OpAccessChain  %124  %92 %38 %38
OpStore %125 %83
%126 = OpLoad  %5  %90
%127 = OpAccessChain  %124  %92 %38 %126
OpStore %127 %85
%129 = OpAccessChain  %128  %92 %38 %38 %107
OpStore %129 %86
%130 = OpLoad  %5  %90
%131 = OpAccessChain  %128  %92 %38 %38 %130
OpStore %131 %87
%132 = OpLoad  %5  %90
%133 = OpAccessChain  %128  %92 %38 %132 %107
OpStore %133 %88
%134 = OpLoad  %5  %90
%135 = OpLoad  %5  %90
%136 = OpAccessChain  %128  %92 %38 %134 %135
OpStore %136 %89
OpReturn
OpFunctionEnd
%138 = OpFunction  %2  None %64
%137 = OpLabel
%148 = OpVariable  %91  Function %45
%149 = OpVariable  %150  Function %142
%140 = OpAccessChain  %139  %58 %38
OpBranch %151
%151 = OpLabel
%152 = OpLoad  %5  %148
%153 = OpISub  %5  %152 %45
OpStore %148 %153
%155 = OpAccessChain  %154  %140 %38
%156 = OpLoad  %25  %155
%158 = OpAccessChain  %157  %140 %38 %38
%159 = OpLoad  %24  %158
%160 = OpAccessChain  %100  %140 %38 %38 %38
%161 = OpLoad  %12  %160
%162 = OpLoad  %5  %148
%163 = OpAccessChain  %100  %140 %38 %38 %162
%164 = OpLoad  %12  %163
%165 = OpAccessChain  %106  %140 %38 %38 %38 %107
%166 = OpLoad  %10  %165
%167 = OpLoad  %5  %148
%168 = OpAccessChain  %106  %140 %38 %38 %38 %167
%169 = OpLoad  %10  %168
%170 = OpLoad  %5  %148
%171 = OpAccessChain  %106  %140 %38 %38 %170 %107
%172 = OpLoad  %10  %171
%173 = OpLoad  %5  %148
%174 = OpLoad  %5  %148
%175 = OpAccessChain  %106  %140 %38 %38 %173 %174
%176 = OpLoad  %10  %175
%177 = OpLoad  %5  %148
%178 = OpIAdd  %5  %177 %45
OpStore %148 %178
%180 = OpAccessChain  %179  %149 %38
OpStore %180 %141
%182 = OpAccessChain  %181  %149 %38 %38
OpStore %182 %147
%183 = OpAccessChain  %124  %149 %38 %38 %38
OpStore %183 %83
%184 = OpLoad  %5  %148
%185 = OpAccessChain  %124  %149 %38 %38 %184
OpStore %185 %85
%186 = OpAccessChain  %128  %149 %38 %38 %38 %107
OpStore %186 %86
%187 = OpLoad  %5  %148
%188 = OpAccessChain  %128  %149 %38 %38 %38 %187
OpStore %188 %87
%189 = OpLoad  %5  %148
%190 = OpAccessChain  %128  %149 %38 %38 %189 %107
OpStore %190 %88
%191 = OpLoad  %5  %148
%192 = OpLoad  %5  %148
%193 = OpAccessChain  %128  %149 %38 %38 %191 %192
OpStore %193 %89
OpReturn
OpFunctionEnd
%196 = OpFunction  %10  None %197
%195 = OpFunctionParameter  %27
%194 = OpLabel
OpBranch %198
%198 = OpLabel
%199 = OpLoad  %10  %195
OpReturnValue %199
OpFunctionEnd
%202 = OpFunction  %10  None %203
%201 = OpFunctionParameter  %29
%200 = OpLabel
OpBranch %204
%204 = OpLabel
%205 = OpCompositeExtract  %28  %201 4
%206 = OpCompositeExtract  %10  %205 9
OpReturnValue %206
OpFunctionEnd
%209 = OpFunction  %2  None %210
%208 = OpFunctionParameter  %35
%207 = OpLabel
OpBranch %212
%212 = OpLabel
OpStore %208 %211
OpReturn
OpFunctionEnd
%215 = OpFunction  %2  None %216
%214 = OpFunctionParameter  %37
%213 = OpLabel
OpBranch %220
%220 = OpLabel
OpStore %214 %219
OpReturn
OpFunctionEnd
%227 = OpFunction  %2  None %64
%221 = OpLabel
%237 = OpVariable  %27  Function %232
%238 = OpVariable  %239  Function %240
%224 = OpLoad  %3  %222
%228 = OpAccessChain  %65  %52 %38
%230 = OpAccessChain  %229  %55 %38
%231 = OpAccessChain  %139  %58 %38
OpBranch %241
%241 = OpLabel
%242 = OpLoad  %10  %237
OpStore %237 %67
%243 = OpFunctionCall  %2  %63
%244 = OpFunctionCall  %2  %138
%246 = OpAccessChain  %245  %50 %38
%247 = OpLoad  %8  %246
%250 = OpAccessChain  %248  %50 %249
%251 = OpLoad  %18  %250
%254 = OpAccessChain  %253  %50 %38 %233 %38
%255 = OpLoad  %10  %254
%257 = OpArrayLength  %3  %50 5
%258 = OpISub  %3  %257 %14
%260 = OpAccessChain  %32  %50 %30 %258 %38
%261 = OpLoad  %5  %260
%262 = OpLoad  %23  %230
%263 = OpFunctionCall  %10  %196 %237
%264 = OpConvertFToS  %5  %255
%265 = OpCompositeConstruct  %33  %261 %264 %46 %234 %47
OpStore %238 %265
%266 = OpIAdd  %3  %224 %107
%267 = OpAccessChain  %91  %238 %266
OpStore %267 %235
%268 = OpAccessChain  %91  %238 %224
%269 = OpLoad  %5  %268
%270 = OpFunctionCall  %10  %202 %236
%271 = OpCompositeConstruct  %34  %269 %269 %269 %269
%272 = OpConvertSToF  %31  %271
%273 = OpMatrixTimesVector  %9  %247 %272
%274 = OpCompositeConstruct  %31  %273 %69
OpStore %225 %274
OpReturn
OpFunctionEnd
%277 = OpFunction  %2  None %64
%275 = OpLabel
%278 = OpAccessChain  %229  %55 %38
OpBranch %289
%289 = OpLabel
%290 = OpAccessChain  %253  %50 %38 %107 %14
OpStore %290 %67
%291 = OpAccessChain  %245  %50 %38
OpStore %291 %283
%292 = OpAccessChain  %248  %50 %249
OpStore %292 %286
%293 = OpAccessChain  %32  %50 %30 %107 %38
OpStore %293 %45
OpStore %278 %287
OpStore %276 %288
OpReturn
OpFunctionEnd
%295 = OpFunction  %2  None %64
%294 = OpLabel
%299 = OpVariable  %37  Function %298
OpBranch %300
%300 = OpLabel
%304 = OpLoad  %4  %302
%308 = OpIEqual  %306  %304 %305
%309 = OpAll  %307  %308
OpSelectionMerge %310 None
OpBranchConditional %309 %311 %310
%311 = OpLabel
OpStore %61 %301
OpBranch %310
%310 = OpLabel
OpControlBarrier %14 %14 %312
OpBranch %313
%313 = OpLabel
%314 = OpFunctionCall  %2  %209 %61
%315 = OpFunctionCall  %2  %215 %299
OpReturn
OpFunctionEnd