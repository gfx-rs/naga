; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 323
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %239 "foo_vert" %234 %237
OpEntryPoint Fragment %278 "foo_frag" %277
OpEntryPoint GLCompute %297 "atomics"
OpEntryPoint GLCompute %320 "assign_through_ptr"
OpExecutionMode %278 OriginUpperLeft
OpExecutionMode %297 LocalSize 1 1 1
OpExecutionMode %320 LocalSize 1 1 1
OpSource GLSL 450
OpName %4 "u32"
OpName %35 "vec3<u32>"
OpName %6 "i32"
OpMemberName %36 0 "a"
OpMemberName %36 1 "b"
OpMemberName %36 2 "c"
OpName %36 "GlobalConst"
OpMemberName %37 0 "value"
OpName %37 "AlignedWrapper"
OpName %38 "mat4x3<f32>"
OpName %40 "mat2x2<f32>"
OpName %42 "array<mat2x2<f32>, 2>"
OpName %6 "atomic<i32>"
OpName %43 "vec2<u32>"
OpName %44 "array<vec2<u32>, 2>"
OpName %45 "array<AlignedWrapper>"
OpMemberName %46 0 "_matrix"
OpMemberName %46 1 "matrix_array"
OpMemberName %46 2 "atom"
OpMemberName %46 3 "arr"
OpMemberName %46 4 "data"
OpName %46 "Bar"
OpName %47 "mat3x2<f32>"
OpMemberName %48 0 "m"
OpName %48 "Baz"
OpName %49 "vec2<i32>"
OpName %50 "ptr<uniform, Baz>"
OpName %10 "f32"
OpName %41 "vec2<f32>"
OpName %51 "ptr<function, Baz>"
OpName %52 "mat4x2<f32>"
OpName %53 "array<mat4x2<f32>, 2>"
OpMemberName %54 0 "am"
OpName %54 "MatCx2InArray"
OpName %55 "ptr<uniform, MatCx2InArray>"
OpName %56 "ptr<function, MatCx2InArray>"
OpName %57 "ptr<function, f32>"
OpName %58 "array<f32, 10>"
OpName %59 "array<array<f32, 10>, 5>"
OpName %60 "vec4<f32>"
OpName %61 "ptr<storage, Bar>"
OpName %62 "ptr<storage, vec3<f32>>"
OpName %39 "vec3<f32>"
OpName %63 "ptr<storage, AlignedWrapper>"
OpName %64 "ptr<storage, i32>"
OpName %65 "array<i32, 5>"
OpName %66 "vec4<i32>"
OpName %67 "ptr<storage, atomic<i32>>"
OpName %68 "ptr<workgroup, u32>"
OpName %77 "global_const"
OpName %79 "bar"
OpName %80 "baz"
OpName %83 "qux"
OpName %86 "nested_mat_cx2"
OpName %89 "val"
OpName %90 "idx"
OpName %93 "t"
OpName %96 "test_matrix_within_struct_accesses"
OpName %152 "idx"
OpName %154 "t"
OpName %157 "test_matrix_within_array_within_struct_accesses"
OpName %211 "foo"
OpName %212 "read_from_private"
OpName %217 "a"
OpName %218 "test_arr_as_arg"
OpName %224 "p"
OpName %225 "assign_through_ptr_fn"
OpName %228 "foo"
OpName %230 "d"
OpName %234 "vi"
OpName %239 "foo_vert"
OpName %278 "foo_frag"
OpName %294 "tmp"
OpName %297 "atomics"
OpName %320 "assign_through_ptr"
OpMemberDecorate %36 0 Offset 0
OpMemberDecorate %36 1 Offset 16
OpMemberDecorate %36 2 Offset 28
OpMemberDecorate %37 0 Offset 0
OpDecorate %42 ArrayStride 16
OpDecorate %44 ArrayStride 8
OpDecorate %45 ArrayStride 8
OpMemberDecorate %46 0 Offset 0
OpMemberDecorate %46 0 ColMajor
OpMemberDecorate %46 0 MatrixStride 16
OpMemberDecorate %46 1 Offset 64
OpMemberDecorate %46 1 ColMajor
OpMemberDecorate %46 1 MatrixStride 8
OpMemberDecorate %46 2 Offset 96
OpMemberDecorate %46 3 Offset 104
OpMemberDecorate %46 4 Offset 120
OpMemberDecorate %48 0 Offset 0
OpMemberDecorate %48 0 ColMajor
OpMemberDecorate %48 0 MatrixStride 8
OpDecorate %53 ArrayStride 32
OpMemberDecorate %54 0 Offset 0
OpMemberDecorate %54 0 ColMajor
OpMemberDecorate %54 0 MatrixStride 8
OpDecorate %58 ArrayStride 4
OpDecorate %59 ArrayStride 40
OpDecorate %65 ArrayStride 4
OpDecorate %79 DescriptorSet 0
OpDecorate %79 Binding 0
OpDecorate %46 Block
OpDecorate %80 DescriptorSet 0
OpDecorate %80 Binding 1
OpDecorate %81 Block
OpMemberDecorate %81 0 Offset 0
OpDecorate %83 DescriptorSet 0
OpDecorate %83 Binding 2
OpDecorate %84 Block
OpMemberDecorate %84 0 Offset 0
OpDecorate %86 DescriptorSet 0
OpDecorate %86 Binding 3
OpDecorate %87 Block
OpMemberDecorate %87 0 Offset 0
OpDecorate %234 BuiltIn VertexIndex
OpDecorate %237 BuiltIn Position
OpDecorate %277 Location 0
%2 = OpTypeVoid
%4 = OpTypeInt 32 0
%3 = OpConstant  %4  0
%6 = OpTypeInt 32 1
%5 = OpConstant  %6  0
%7 = OpConstant  %4  2
%8 = OpConstant  %6  1
%10 = OpTypeFloat 32
%9 = OpConstant  %10  1.0
%11 = OpConstant  %10  2.0
%12 = OpConstant  %10  3.0
%13 = OpConstant  %10  6.0
%14 = OpConstant  %10  5.0
%15 = OpConstant  %10  4.0
%16 = OpConstant  %10  9.0
%17 = OpConstant  %10  90.0
%18 = OpConstant  %10  10.0
%19 = OpConstant  %10  20.0
%20 = OpConstant  %10  30.0
%21 = OpConstant  %10  40.0
%22 = OpConstant  %10  0.0
%23 = OpConstant  %10  8.0
%24 = OpConstant  %10  7.0
%25 = OpConstant  %4  10
%26 = OpConstant  %4  5
%27 = OpConstant  %6  4
%28 = OpConstant  %6  9
%29 = OpConstant  %4  3
%30 = OpConstant  %6  3
%31 = OpConstant  %6  5
%32 = OpConstant  %4  1
%33 = OpConstant  %6  42
%34 = OpConstant  %4  42
%35 = OpTypeVector %4 3
%36 = OpTypeStruct %4 %35 %6
%37 = OpTypeStruct %6
%39 = OpTypeVector %10 3
%38 = OpTypeMatrix %39 4
%41 = OpTypeVector %10 2
%40 = OpTypeMatrix %41 2
%42 = OpTypeArray %40 %7
%43 = OpTypeVector %4 2
%44 = OpTypeArray %43 %7
%45 = OpTypeRuntimeArray %37
%46 = OpTypeStruct %38 %42 %6 %44 %45
%47 = OpTypeMatrix %41 3
%48 = OpTypeStruct %47
%49 = OpTypeVector %6 2
%50 = OpTypePointer Uniform %48
%51 = OpTypePointer Function %48
%52 = OpTypeMatrix %41 4
%53 = OpTypeArray %52 %7
%54 = OpTypeStruct %53
%55 = OpTypePointer Uniform %54
%56 = OpTypePointer Function %54
%57 = OpTypePointer Function %10
%58 = OpTypeArray %10 %25
%59 = OpTypeArray %58 %26
%60 = OpTypeVector %10 4
%61 = OpTypePointer StorageBuffer %46
%62 = OpTypePointer StorageBuffer %39
%63 = OpTypePointer StorageBuffer %37
%64 = OpTypePointer StorageBuffer %6
%65 = OpTypeArray %6 %26
%66 = OpTypeVector %6 4
%67 = OpTypePointer StorageBuffer %6
%68 = OpTypePointer Workgroup %4
%69 = OpConstantComposite  %35  %3 %3 %3
%70 = OpConstantComposite  %36  %3 %69 %5
%71 = OpConstantComposite  %41  %22 %22
%72 = OpConstantComposite  %52  %71 %71 %71 %71
%73 = OpConstantComposite  %53  %72 %72
%74 = OpConstantComposite  %58  %22 %22 %22 %22 %22 %22 %22 %22 %22 %22
%75 = OpConstantComposite  %59  %74 %74 %74 %74 %74
%76 = OpConstantComposite  %49  %5 %5
%78 = OpTypePointer Private %36
%77 = OpVariable  %78  Private %70
%79 = OpVariable  %61  StorageBuffer
%81 = OpTypeStruct %48
%82 = OpTypePointer Uniform %81
%80 = OpVariable  %82  Uniform
%84 = OpTypeStruct %49
%85 = OpTypePointer StorageBuffer %84
%83 = OpVariable  %85  StorageBuffer
%87 = OpTypeStruct %54
%88 = OpTypePointer Uniform %87
%86 = OpVariable  %88  Uniform
%89 = OpVariable  %68  Workgroup
%91 = OpTypePointer Function %6
%92 = OpConstantNull  %6
%94 = OpConstantNull  %48
%97 = OpTypeFunction %2
%102 = OpTypePointer Uniform %47
%105 = OpTypePointer Uniform %41
%111 = OpTypePointer Uniform %10
%135 = OpTypePointer Function %47
%138 = OpTypePointer Function %41
%143 = OpTypePointer Function %10
%153 = OpConstantNull  %6
%155 = OpConstantNull  %54
%162 = OpTypePointer Uniform %53
%165 = OpTypePointer Uniform %52
%188 = OpTypePointer Function %53
%195 = OpTypePointer Function %52
%213 = OpTypeFunction %10 %57
%219 = OpTypeFunction %10 %59
%226 = OpTypeFunction %2 %68
%229 = OpConstantNull  %10
%231 = OpTypePointer Function %65
%232 = OpConstantNull  %65
%235 = OpTypePointer Input %4
%234 = OpVariable  %235  Input
%238 = OpTypePointer Output %60
%237 = OpVariable  %238  Output
%241 = OpTypePointer StorageBuffer %49
%248 = OpTypePointer StorageBuffer %38
%251 = OpTypePointer StorageBuffer %44
%254 = OpTypePointer StorageBuffer %10
%257 = OpTypePointer StorageBuffer %45
%260 = OpConstant  %4  4
%277 = OpVariable  %238  Output
%295 = OpConstantNull  %6
%301 = OpConstant  %4  64
%96 = OpFunction  %2  None %97
%95 = OpLabel
%90 = OpVariable  %91  Function %92
%93 = OpVariable  %51  Function %94
%98 = OpAccessChain  %50  %80 %3
OpBranch %99
%99 = OpLabel
OpStore %90 %8
%100 = OpLoad  %6  %90
%101 = OpISub  %6  %100 %8
OpStore %90 %101
%103 = OpAccessChain  %102  %98 %3
%104 = OpLoad  %47  %103
%106 = OpAccessChain  %105  %98 %3 %3
%107 = OpLoad  %41  %106
%108 = OpLoad  %6  %90
%109 = OpAccessChain  %105  %98 %3 %108
%110 = OpLoad  %41  %109
%112 = OpAccessChain  %111  %98 %3 %3 %32
%113 = OpLoad  %10  %112
%114 = OpLoad  %6  %90
%115 = OpAccessChain  %111  %98 %3 %3 %114
%116 = OpLoad  %10  %115
%117 = OpLoad  %6  %90
%118 = OpAccessChain  %111  %98 %3 %117 %32
%119 = OpLoad  %10  %118
%120 = OpLoad  %6  %90
%121 = OpLoad  %6  %90
%122 = OpAccessChain  %111  %98 %3 %120 %121
%123 = OpLoad  %10  %122
%124 = OpCompositeConstruct  %41  %9 %9
%125 = OpCompositeConstruct  %41  %11 %11
%126 = OpCompositeConstruct  %41  %12 %12
%127 = OpCompositeConstruct  %47  %124 %125 %126
%128 = OpCompositeConstruct  %48  %127
OpStore %93 %128
%129 = OpLoad  %6  %90
%130 = OpIAdd  %6  %129 %8
OpStore %90 %130
%131 = OpCompositeConstruct  %41  %13 %13
%132 = OpCompositeConstruct  %41  %14 %14
%133 = OpCompositeConstruct  %41  %15 %15
%134 = OpCompositeConstruct  %47  %131 %132 %133
%136 = OpAccessChain  %135  %93 %3
OpStore %136 %134
%137 = OpCompositeConstruct  %41  %16 %16
%139 = OpAccessChain  %138  %93 %3 %3
OpStore %139 %137
%140 = OpCompositeConstruct  %41  %17 %17
%141 = OpLoad  %6  %90
%142 = OpAccessChain  %138  %93 %3 %141
OpStore %142 %140
%144 = OpAccessChain  %143  %93 %3 %3 %32
OpStore %144 %18
%145 = OpLoad  %6  %90
%146 = OpAccessChain  %143  %93 %3 %3 %145
OpStore %146 %19
%147 = OpLoad  %6  %90
%148 = OpAccessChain  %143  %93 %3 %147 %32
OpStore %148 %20
%149 = OpLoad  %6  %90
%150 = OpLoad  %6  %90
%151 = OpAccessChain  %143  %93 %3 %149 %150
OpStore %151 %21
OpReturn
OpFunctionEnd
%157 = OpFunction  %2  None %97
%156 = OpLabel
%152 = OpVariable  %91  Function %153
%154 = OpVariable  %56  Function %155
%158 = OpAccessChain  %55  %86 %3
OpBranch %159
%159 = OpLabel
OpStore %152 %8
%160 = OpLoad  %6  %152
%161 = OpISub  %6  %160 %8
OpStore %152 %161
%163 = OpAccessChain  %162  %158 %3
%164 = OpLoad  %53  %163
%166 = OpAccessChain  %165  %158 %3 %3
%167 = OpLoad  %52  %166
%168 = OpAccessChain  %105  %158 %3 %3 %3
%169 = OpLoad  %41  %168
%170 = OpLoad  %6  %152
%171 = OpAccessChain  %105  %158 %3 %3 %170
%172 = OpLoad  %41  %171
%173 = OpAccessChain  %111  %158 %3 %3 %3 %32
%174 = OpLoad  %10  %173
%175 = OpLoad  %6  %152
%176 = OpAccessChain  %111  %158 %3 %3 %3 %175
%177 = OpLoad  %10  %176
%178 = OpLoad  %6  %152
%179 = OpAccessChain  %111  %158 %3 %3 %178 %32
%180 = OpLoad  %10  %179
%181 = OpLoad  %6  %152
%182 = OpLoad  %6  %152
%183 = OpAccessChain  %111  %158 %3 %3 %181 %182
%184 = OpLoad  %10  %183
%185 = OpCompositeConstruct  %54  %73
OpStore %154 %185
%186 = OpLoad  %6  %152
%187 = OpIAdd  %6  %186 %8
OpStore %152 %187
%189 = OpAccessChain  %188  %154 %3
OpStore %189 %73
%190 = OpCompositeConstruct  %41  %23 %23
%191 = OpCompositeConstruct  %41  %24 %24
%192 = OpCompositeConstruct  %41  %13 %13
%193 = OpCompositeConstruct  %41  %14 %14
%194 = OpCompositeConstruct  %52  %190 %191 %192 %193
%196 = OpAccessChain  %195  %154 %3 %3
OpStore %196 %194
%197 = OpCompositeConstruct  %41  %16 %16
%198 = OpAccessChain  %138  %154 %3 %3 %3
OpStore %198 %197
%199 = OpCompositeConstruct  %41  %17 %17
%200 = OpLoad  %6  %152
%201 = OpAccessChain  %138  %154 %3 %3 %200
OpStore %201 %199
%202 = OpAccessChain  %143  %154 %3 %3 %3 %32
OpStore %202 %18
%203 = OpLoad  %6  %152
%204 = OpAccessChain  %143  %154 %3 %3 %3 %203
OpStore %204 %19
%205 = OpLoad  %6  %152
%206 = OpAccessChain  %143  %154 %3 %3 %205 %32
OpStore %206 %20
%207 = OpLoad  %6  %152
%208 = OpLoad  %6  %152
%209 = OpAccessChain  %143  %154 %3 %3 %207 %208
OpStore %209 %21
OpReturn
OpFunctionEnd
%212 = OpFunction  %10  None %213
%211 = OpFunctionParameter  %57
%210 = OpLabel
OpBranch %214
%214 = OpLabel
%215 = OpLoad  %10  %211
OpReturnValue %215
OpFunctionEnd
%218 = OpFunction  %10  None %219
%217 = OpFunctionParameter  %59
%216 = OpLabel
OpBranch %220
%220 = OpLabel
%221 = OpCompositeExtract  %58  %217 4
%222 = OpCompositeExtract  %10  %221 9
OpReturnValue %222
OpFunctionEnd
%225 = OpFunction  %2  None %226
%224 = OpFunctionParameter  %68
%223 = OpLabel
OpBranch %227
%227 = OpLabel
OpStore %224 %34
OpReturn
OpFunctionEnd
%239 = OpFunction  %2  None %97
%233 = OpLabel
%228 = OpVariable  %57  Function %229
%230 = OpVariable  %231  Function %232
%236 = OpLoad  %4  %234
%240 = OpAccessChain  %50  %80 %3
%242 = OpAccessChain  %241  %83 %3
%243 = OpAccessChain  %55  %86 %3
OpBranch %244
%244 = OpLabel
OpStore %228 %22
%245 = OpLoad  %10  %228
OpStore %228 %9
%246 = OpFunctionCall  %2  %96
%247 = OpFunctionCall  %2  %157
%249 = OpAccessChain  %248  %79 %3
%250 = OpLoad  %38  %249
%252 = OpAccessChain  %251  %79 %29
%253 = OpLoad  %44  %252
%255 = OpAccessChain  %254  %79 %3 %29 %3
%256 = OpLoad  %10  %255
%258 = OpArrayLength  %4  %79 4
%259 = OpISub  %4  %258 %7
%261 = OpAccessChain  %64  %79 %260 %259 %3
%262 = OpLoad  %6  %261
%263 = OpLoad  %49  %242
%264 = OpFunctionCall  %10  %212 %228
%265 = OpConvertFToS  %6  %256
%266 = OpCompositeConstruct  %65  %262 %265 %30 %27 %31
OpStore %230 %266
%267 = OpIAdd  %4  %236 %32
%268 = OpAccessChain  %91  %230 %267
OpStore %268 %33
%269 = OpAccessChain  %91  %230 %236
%270 = OpLoad  %6  %269
%271 = OpFunctionCall  %10  %218 %75
%272 = OpCompositeConstruct  %66  %270 %270 %270 %270
%273 = OpConvertSToF  %60  %272
%274 = OpMatrixTimesVector  %39  %250 %273
%275 = OpCompositeConstruct  %60  %274 %11
OpStore %237 %275
OpReturn
OpFunctionEnd
%278 = OpFunction  %2  None %97
%276 = OpLabel
%279 = OpAccessChain  %241  %83 %3
OpBranch %280
%280 = OpLabel
%281 = OpAccessChain  %254  %79 %3 %32 %7
OpStore %281 %9
%282 = OpCompositeConstruct  %39  %22 %22 %22
%283 = OpCompositeConstruct  %39  %9 %9 %9
%284 = OpCompositeConstruct  %39  %11 %11 %11
%285 = OpCompositeConstruct  %39  %12 %12 %12
%286 = OpCompositeConstruct  %38  %282 %283 %284 %285
%287 = OpAccessChain  %248  %79 %3
OpStore %287 %286
%288 = OpCompositeConstruct  %43  %3 %3
%289 = OpCompositeConstruct  %43  %32 %32
%290 = OpCompositeConstruct  %44  %288 %289
%291 = OpAccessChain  %251  %79 %29
OpStore %291 %290
%292 = OpAccessChain  %64  %79 %260 %32 %3
OpStore %292 %8
OpStore %279 %76
%293 = OpCompositeConstruct  %60  %22 %22 %22 %22
OpStore %277 %293
OpReturn
OpFunctionEnd
%297 = OpFunction  %2  None %97
%296 = OpLabel
%294 = OpVariable  %91  Function %295
OpBranch %298
%298 = OpLabel
%299 = OpAccessChain  %67  %79 %7
%300 = OpAtomicLoad  %6  %299 %8 %301
%303 = OpAccessChain  %67  %79 %7
%302 = OpAtomicIAdd  %6  %303 %8 %301 %31
OpStore %294 %302
%305 = OpAccessChain  %67  %79 %7
%304 = OpAtomicISub  %6  %305 %8 %301 %31
OpStore %294 %304
%307 = OpAccessChain  %67  %79 %7
%306 = OpAtomicAnd  %6  %307 %8 %301 %31
OpStore %294 %306
%309 = OpAccessChain  %67  %79 %7
%308 = OpAtomicOr  %6  %309 %8 %301 %31
OpStore %294 %308
%311 = OpAccessChain  %67  %79 %7
%310 = OpAtomicXor  %6  %311 %8 %301 %31
OpStore %294 %310
%313 = OpAccessChain  %67  %79 %7
%312 = OpAtomicSMin  %6  %313 %8 %301 %31
OpStore %294 %312
%315 = OpAccessChain  %67  %79 %7
%314 = OpAtomicSMax  %6  %315 %8 %301 %31
OpStore %294 %314
%317 = OpAccessChain  %67  %79 %7
%316 = OpAtomicExchange  %6  %317 %8 %301 %31
OpStore %294 %316
%318 = OpAccessChain  %67  %79 %7
OpAtomicStore %318 %8 %301 %300
OpReturn
OpFunctionEnd
%320 = OpFunction  %2  None %97
%319 = OpLabel
OpBranch %321
%321 = OpLabel
%322 = OpFunctionCall  %2  %225 %89
OpReturn
OpFunctionEnd