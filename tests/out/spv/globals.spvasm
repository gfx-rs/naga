; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 185
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %102 "main" %128
OpExecutionMode %102 LocalSize 1 1 1
OpDecorate %11 ArrayStride 4
OpMemberDecorate %13 0 Offset 0
OpMemberDecorate %13 1 Offset 12
OpDecorate %15 ArrayStride 8
OpDecorate %17 ArrayStride 16
OpDecorate %20 ArrayStride 32
OpDecorate %21 ArrayStride 64
OpDecorate %23 ArrayStride 32
OpDecorate %24 ArrayStride 64
OpDecorate %30 DescriptorSet 0
OpDecorate %30 Binding 1
OpDecorate %31 Block
OpMemberDecorate %31 0 Offset 0
OpDecorate %33 NonWritable
OpDecorate %33 DescriptorSet 0
OpDecorate %33 Binding 2
OpDecorate %34 Block
OpMemberDecorate %34 0 Offset 0
OpDecorate %36 DescriptorSet 0
OpDecorate %36 Binding 3
OpDecorate %37 Block
OpMemberDecorate %37 0 Offset 0
OpDecorate %39 DescriptorSet 0
OpDecorate %39 Binding 4
OpDecorate %40 Block
OpMemberDecorate %40 0 Offset 0
OpDecorate %42 DescriptorSet 0
OpDecorate %42 Binding 5
OpDecorate %43 Block
OpMemberDecorate %43 0 Offset 0
OpMemberDecorate %43 0 ColMajor
OpMemberDecorate %43 0 MatrixStride 8
OpDecorate %45 DescriptorSet 0
OpDecorate %45 Binding 6
OpDecorate %46 Block
OpMemberDecorate %46 0 Offset 0
OpDecorate %48 DescriptorSet 0
OpDecorate %48 Binding 7
OpDecorate %49 Block
OpMemberDecorate %49 0 Offset 0
OpDecorate %128 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%4 = OpTypeBool
%3 = OpConstantTrue  %4
%6 = OpTypeInt 32 0
%5 = OpConstant  %6  10
%8 = OpTypeInt 32 1
%7 = OpConstant  %8  20
%9 = OpConstant  %8  2
%10 = OpTypeFloat 32
%11 = OpTypeArray %10 %5
%12 = OpTypeVector %10 3
%13 = OpTypeStruct %12 %10
%14 = OpTypeVector %10 2
%15 = OpTypeRuntimeArray %14
%16 = OpTypeVector %10 4
%17 = OpTypeArray %16 %7
%18 = OpTypeMatrix %14 3
%19 = OpTypeMatrix %16 2
%20 = OpTypeArray %19 %9
%21 = OpTypeArray %20 %9
%22 = OpTypeMatrix %14 4
%23 = OpTypeArray %22 %9
%24 = OpTypeArray %23 %9
%25 = OpTypeMatrix %12 3
%27 = OpTypePointer Workgroup %11
%26 = OpVariable  %27  Workgroup
%29 = OpTypePointer Workgroup %6
%28 = OpVariable  %29  Workgroup
%31 = OpTypeStruct %13
%32 = OpTypePointer StorageBuffer %31
%30 = OpVariable  %32  StorageBuffer
%34 = OpTypeStruct %15
%35 = OpTypePointer StorageBuffer %34
%33 = OpVariable  %35  StorageBuffer
%37 = OpTypeStruct %17
%38 = OpTypePointer Uniform %37
%36 = OpVariable  %38  Uniform
%40 = OpTypeStruct %12
%41 = OpTypePointer Uniform %40
%39 = OpVariable  %41  Uniform
%43 = OpTypeStruct %18
%44 = OpTypePointer Uniform %43
%42 = OpVariable  %44  Uniform
%46 = OpTypeStruct %21
%47 = OpTypePointer Uniform %46
%45 = OpVariable  %47  Uniform
%49 = OpTypeStruct %24
%50 = OpTypePointer Uniform %49
%48 = OpVariable  %50  Uniform
%54 = OpTypeFunction %2 %12
%57 = OpTypePointer Function %8
%58 = OpConstantNull  %8
%61 = OpTypeFunction %2
%62 = OpTypePointer StorageBuffer %13
%63 = OpConstant  %6  0
%65 = OpConstant  %10  1.0
%66 = OpConstant  %8  1
%67 = OpConstant  %8  0
%68 = OpConstant  %10  2.0
%69 = OpConstant  %10  3.0
%70 = OpConstantNull  %25
%71 = OpConstantNull  %25
%73 = OpTypePointer StorageBuffer %12
%76 = OpTypePointer StorageBuffer %10
%96 = OpTypePointer Function %10
%97 = OpConstantNull  %10
%99 = OpTypePointer Function %4
%100 = OpConstantNull  %4
%104 = OpTypePointer StorageBuffer %15
%106 = OpTypePointer Uniform %17
%108 = OpTypePointer Uniform %12
%110 = OpTypePointer Uniform %18
%112 = OpTypePointer Uniform %21
%114 = OpTypePointer Uniform %24
%116 = OpConstant  %8  7
%117 = OpConstant  %8  6
%118 = OpConstant  %8  5
%119 = OpConstant  %8  4
%120 = OpConstant  %8  3
%121 = OpConstant  %10  4.0
%122 = OpConstant  %6  2
%123 = OpConstantTrue  %4
%125 = OpConstantNull  %11
%126 = OpConstantNull  %6
%127 = OpTypeVector %6 3
%129 = OpTypePointer Input %127
%128 = OpVariable  %129  Input
%131 = OpConstantNull  %127
%132 = OpTypeVector %4 3
%137 = OpConstant  %6  264
%140 = OpTypePointer Workgroup %10
%141 = OpTypePointer Uniform %23
%142 = OpTypePointer Uniform %22
%145 = OpTypePointer Uniform %20
%146 = OpTypePointer Uniform %19
%147 = OpTypePointer Uniform %16
%152 = OpConstant  %6  7
%158 = OpConstant  %6  6
%160 = OpTypePointer StorageBuffer %14
%161 = OpConstant  %6  1
%164 = OpConstant  %6  5
%166 = OpTypePointer Uniform %16
%167 = OpTypePointer Uniform %10
%168 = OpConstant  %6  3
%171 = OpConstant  %6  4
%173 = OpTypePointer StorageBuffer %10
%184 = OpConstant  %6  256
%53 = OpFunction  %2  None %54
%52 = OpFunctionParameter  %12
%51 = OpLabel
OpBranch %55
%55 = OpLabel
OpReturn
OpFunctionEnd
%60 = OpFunction  %2  None %61
%59 = OpLabel
%56 = OpVariable  %57  Function %58
%64 = OpAccessChain  %62  %30 %63
OpBranch %72
%72 = OpLabel
%74 = OpCompositeConstruct  %12  %65 %65 %65
%75 = OpAccessChain  %73  %64 %63
OpStore %75 %74
OpStore %56 %66
%77 = OpAccessChain  %76  %64 %63 %63
OpStore %77 %65
%78 = OpAccessChain  %76  %64 %63 %63
OpStore %78 %68
%79 = OpLoad  %8  %56
%80 = OpAccessChain  %76  %64 %63 %79
OpStore %80 %69
%81 = OpLoad  %13  %64
%82 = OpCompositeExtract  %12  %81 0
%83 = OpCompositeExtract  %12  %81 0
%84 = OpVectorShuffle  %14  %83 %83 2 0
%85 = OpCompositeExtract  %12  %81 0
%86 = OpFunctionCall  %2  %53 %85
%87 = OpCompositeExtract  %12  %81 0
%88 = OpVectorTimesMatrix  %12  %87 %70
%89 = OpCompositeExtract  %12  %81 0
%90 = OpMatrixTimesVector  %12  %71 %89
%91 = OpCompositeExtract  %12  %81 0
%92 = OpVectorTimesScalar  %12  %91 %68
%93 = OpCompositeExtract  %12  %81 0
%94 = OpVectorTimesScalar  %12  %93 %68
OpReturn
OpFunctionEnd
%102 = OpFunction  %2  None %61
%101 = OpLabel
%95 = OpVariable  %96  Function %97
%98 = OpVariable  %99  Function %100
%103 = OpAccessChain  %62  %30 %63
%105 = OpAccessChain  %104  %33 %63
%107 = OpAccessChain  %106  %36 %63
%109 = OpAccessChain  %108  %39 %63
%111 = OpAccessChain  %110  %42 %63
%113 = OpAccessChain  %112  %45 %63
%115 = OpAccessChain  %114  %48 %63
OpBranch %124
%124 = OpLabel
%130 = OpLoad  %127  %128
%133 = OpIEqual  %132  %130 %131
%134 = OpAll  %4  %133
OpSelectionMerge %135 None
OpBranchConditional %134 %136 %135
%136 = OpLabel
OpStore %26 %125
OpStore %28 %126
OpBranch %135
%135 = OpLabel
OpControlBarrier %122 %122 %137
OpBranch %138
%138 = OpLabel
%139 = OpFunctionCall  %2  %60
%143 = OpAccessChain  %142  %115 %63 %63
%144 = OpLoad  %22  %143
%148 = OpAccessChain  %147  %113 %63 %63 %63
%149 = OpLoad  %16  %148
%150 = OpMatrixTimesVector  %14  %144 %149
%151 = OpCompositeExtract  %10  %150 0
%153 = OpAccessChain  %140  %26 %152
OpStore %153 %151
%154 = OpLoad  %18  %111
%155 = OpLoad  %12  %109
%156 = OpMatrixTimesVector  %14  %154 %155
%157 = OpCompositeExtract  %10  %156 0
%159 = OpAccessChain  %140  %26 %158
OpStore %159 %157
%162 = OpAccessChain  %76  %105 %161 %161
%163 = OpLoad  %10  %162
%165 = OpAccessChain  %140  %26 %164
OpStore %165 %163
%169 = OpAccessChain  %167  %107 %63 %168
%170 = OpLoad  %10  %169
%172 = OpAccessChain  %140  %26 %171
OpStore %172 %170
%174 = OpAccessChain  %173  %103 %161
%175 = OpLoad  %10  %174
%176 = OpAccessChain  %140  %26 %168
OpStore %176 %175
%177 = OpAccessChain  %76  %103 %63 %63
%178 = OpLoad  %10  %177
%179 = OpAccessChain  %140  %26 %122
OpStore %179 %178
%180 = OpAccessChain  %173  %103 %161
OpStore %180 %121
%181 = OpArrayLength  %6  %33 0
%182 = OpConvertUToF  %10  %181
%183 = OpAccessChain  %140  %26 %161
OpStore %183 %182
OpAtomicStore %28 %9 %184 %122
OpStore %95 %65
OpStore %98 %123
OpReturn
OpFunctionEnd