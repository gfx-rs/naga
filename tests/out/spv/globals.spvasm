; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 181
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %101 "main" %124
OpExecutionMode %101 LocalSize 1 1 1
OpDecorate %5 ArrayStride 4
OpMemberDecorate %9 0 Offset 0
OpMemberDecorate %9 1 Offset 12
OpDecorate %11 ArrayStride 8
OpDecorate %13 ArrayStride 16
OpDecorate %17 ArrayStride 32
OpDecorate %19 ArrayStride 64
OpDecorate %21 ArrayStride 32
OpDecorate %22 ArrayStride 64
OpDecorate %39 DescriptorSet 0
OpDecorate %39 Binding 1
OpDecorate %40 Block
OpMemberDecorate %40 0 Offset 0
OpDecorate %42 NonWritable
OpDecorate %42 DescriptorSet 0
OpDecorate %42 Binding 2
OpDecorate %43 Block
OpMemberDecorate %43 0 Offset 0
OpDecorate %45 DescriptorSet 0
OpDecorate %45 Binding 3
OpDecorate %46 Block
OpMemberDecorate %46 0 Offset 0
OpDecorate %48 DescriptorSet 0
OpDecorate %48 Binding 4
OpDecorate %49 Block
OpMemberDecorate %49 0 Offset 0
OpDecorate %51 DescriptorSet 0
OpDecorate %51 Binding 5
OpDecorate %52 Block
OpMemberDecorate %52 0 Offset 0
OpMemberDecorate %52 0 ColMajor
OpMemberDecorate %52 0 MatrixStride 8
OpDecorate %54 DescriptorSet 0
OpDecorate %54 Binding 6
OpDecorate %55 Block
OpMemberDecorate %55 0 Offset 0
OpDecorate %57 DescriptorSet 0
OpDecorate %57 Binding 7
OpDecorate %58 Block
OpMemberDecorate %58 0 Offset 0
OpDecorate %124 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeBool
%4 = OpTypeFloat 32
%7 = OpTypeInt 32 0
%6 = OpConstant  %7  10
%5 = OpTypeArray %4 %6
%8 = OpTypeVector %4 3
%9 = OpTypeStruct %8 %4
%10 = OpTypeVector %4 2
%11 = OpTypeRuntimeArray %10
%12 = OpTypeVector %4 4
%14 = OpConstant  %7  20
%13 = OpTypeArray %12 %14
%15 = OpTypeMatrix %10 3
%16 = OpTypeMatrix %12 2
%18 = OpConstant  %7  2
%17 = OpTypeArray %16 %18
%19 = OpTypeArray %17 %18
%20 = OpTypeMatrix %10 4
%21 = OpTypeArray %20 %18
%22 = OpTypeArray %21 %18
%23 = OpTypeInt 32 1
%24 = OpTypeMatrix %8 3
%25 = OpConstantTrue  %3
%26 = OpConstant  %23  0
%27 = OpConstant  %23  1
%28 = OpConstant  %23  2
%29 = OpConstant  %23  20
%30 = OpConstant  %23  3
%31 = OpConstant  %23  4
%32 = OpConstant  %23  5
%33 = OpConstant  %23  6
%34 = OpConstant  %23  7
%36 = OpTypePointer Workgroup %5
%35 = OpVariable  %36  Workgroup
%38 = OpTypePointer Workgroup %7
%37 = OpVariable  %38  Workgroup
%40 = OpTypeStruct %9
%41 = OpTypePointer StorageBuffer %40
%39 = OpVariable  %41  StorageBuffer
%43 = OpTypeStruct %11
%44 = OpTypePointer StorageBuffer %43
%42 = OpVariable  %44  StorageBuffer
%46 = OpTypeStruct %13
%47 = OpTypePointer Uniform %46
%45 = OpVariable  %47  Uniform
%49 = OpTypeStruct %8
%50 = OpTypePointer Uniform %49
%48 = OpVariable  %50  Uniform
%52 = OpTypeStruct %15
%53 = OpTypePointer Uniform %52
%51 = OpVariable  %53  Uniform
%55 = OpTypeStruct %19
%56 = OpTypePointer Uniform %55
%54 = OpVariable  %56  Uniform
%58 = OpTypeStruct %22
%59 = OpTypePointer Uniform %58
%57 = OpVariable  %59  Uniform
%63 = OpTypeFunction %2 %8
%67 = OpTypeFunction %2
%68 = OpTypePointer StorageBuffer %9
%69 = OpConstant  %7  0
%71 = OpConstant  %4  1.0
%72 = OpConstantComposite  %8  %71 %71 %71
%73 = OpConstant  %4  2.0
%74 = OpConstant  %4  3.0
%75 = OpConstantNull  %24
%77 = OpTypePointer Function %23
%79 = OpTypePointer StorageBuffer %8
%81 = OpTypePointer StorageBuffer %4
%103 = OpTypePointer StorageBuffer %11
%105 = OpTypePointer Uniform %13
%107 = OpTypePointer Uniform %8
%109 = OpTypePointer Uniform %15
%111 = OpTypePointer Uniform %19
%113 = OpTypePointer Uniform %22
%115 = OpConstant  %4  4.0
%117 = OpTypePointer Function %4
%119 = OpTypePointer Function %3
%121 = OpConstantNull  %5
%122 = OpConstantNull  %7
%123 = OpTypeVector %7 3
%125 = OpTypePointer Input %123
%124 = OpVariable  %125  Input
%127 = OpConstantNull  %123
%128 = OpTypeVector %3 3
%133 = OpConstant  %7  264
%136 = OpTypePointer Workgroup %4
%137 = OpTypePointer Uniform %21
%138 = OpTypePointer Uniform %20
%141 = OpTypePointer Uniform %17
%142 = OpTypePointer Uniform %16
%143 = OpTypePointer Uniform %12
%148 = OpConstant  %7  7
%154 = OpConstant  %7  6
%156 = OpTypePointer StorageBuffer %10
%157 = OpConstant  %7  1
%160 = OpConstant  %7  5
%162 = OpTypePointer Uniform %12
%163 = OpTypePointer Uniform %4
%164 = OpConstant  %7  3
%167 = OpConstant  %7  4
%169 = OpTypePointer StorageBuffer %4
%180 = OpConstant  %7  256
%62 = OpFunction  %2  None %63
%61 = OpFunctionParameter  %8
%60 = OpLabel
OpBranch %64
%64 = OpLabel
OpReturn
OpFunctionEnd
%66 = OpFunction  %2  None %67
%65 = OpLabel
%76 = OpVariable  %77  Function %27
%70 = OpAccessChain  %68  %39 %69
OpBranch %78
%78 = OpLabel
%80 = OpAccessChain  %79  %70 %69
OpStore %80 %72
%82 = OpAccessChain  %81  %70 %69 %69
OpStore %82 %71
%83 = OpAccessChain  %81  %70 %69 %69
OpStore %83 %73
%84 = OpLoad  %23  %76
%85 = OpAccessChain  %81  %70 %69 %84
OpStore %85 %74
%86 = OpLoad  %9  %70
%87 = OpCompositeExtract  %8  %86 0
%88 = OpCompositeExtract  %8  %86 0
%89 = OpVectorShuffle  %10  %88 %88 2 0
%90 = OpCompositeExtract  %8  %86 0
%91 = OpFunctionCall  %2  %62 %90
%92 = OpCompositeExtract  %8  %86 0
%93 = OpVectorTimesMatrix  %8  %92 %75
%94 = OpCompositeExtract  %8  %86 0
%95 = OpMatrixTimesVector  %8  %75 %94
%96 = OpCompositeExtract  %8  %86 0
%97 = OpVectorTimesScalar  %8  %96 %73
%98 = OpCompositeExtract  %8  %86 0
%99 = OpVectorTimesScalar  %8  %98 %73
OpReturn
OpFunctionEnd
%101 = OpFunction  %2  None %67
%100 = OpLabel
%116 = OpVariable  %117  Function %71
%118 = OpVariable  %119  Function %25
%102 = OpAccessChain  %68  %39 %69
%104 = OpAccessChain  %103  %42 %69
%106 = OpAccessChain  %105  %45 %69
%108 = OpAccessChain  %107  %48 %69
%110 = OpAccessChain  %109  %51 %69
%112 = OpAccessChain  %111  %54 %69
%114 = OpAccessChain  %113  %57 %69
OpBranch %120
%120 = OpLabel
%126 = OpLoad  %123  %124
%129 = OpIEqual  %128  %126 %127
%130 = OpAll  %3  %129
OpSelectionMerge %131 None
OpBranchConditional %130 %132 %131
%132 = OpLabel
OpStore %35 %121
OpStore %37 %122
OpBranch %131
%131 = OpLabel
OpControlBarrier %18 %18 %133
OpBranch %134
%134 = OpLabel
%135 = OpFunctionCall  %2  %66
%139 = OpAccessChain  %138  %114 %69 %69
%140 = OpLoad  %20  %139
%144 = OpAccessChain  %143  %112 %69 %69 %69
%145 = OpLoad  %12  %144
%146 = OpMatrixTimesVector  %10  %140 %145
%147 = OpCompositeExtract  %4  %146 0
%149 = OpAccessChain  %136  %35 %148
OpStore %149 %147
%150 = OpLoad  %15  %110
%151 = OpLoad  %8  %108
%152 = OpMatrixTimesVector  %10  %150 %151
%153 = OpCompositeExtract  %4  %152 0
%155 = OpAccessChain  %136  %35 %154
OpStore %155 %153
%158 = OpAccessChain  %81  %104 %157 %157
%159 = OpLoad  %4  %158
%161 = OpAccessChain  %136  %35 %160
OpStore %161 %159
%165 = OpAccessChain  %163  %106 %69 %164
%166 = OpLoad  %4  %165
%168 = OpAccessChain  %136  %35 %167
OpStore %168 %166
%170 = OpAccessChain  %169  %102 %157
%171 = OpLoad  %4  %170
%172 = OpAccessChain  %136  %35 %164
OpStore %172 %171
%173 = OpAccessChain  %81  %102 %69 %69
%174 = OpLoad  %4  %173
%175 = OpAccessChain  %136  %35 %18
OpStore %175 %174
%176 = OpAccessChain  %169  %102 %157
OpStore %176 %115
%177 = OpArrayLength  %7  %42 0
%178 = OpConvertUToF  %4  %177
%179 = OpAccessChain  %136  %35 %157
OpStore %179 %178
OpAtomicStore %37 %28 %180 %18
OpReturn
OpFunctionEnd