; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 172
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %111 "main"
OpExecutionMode %111 LocalSize 1 1 1
OpDecorate %25 ArrayStride 4
OpMemberDecorate %27 0 Offset 0
OpMemberDecorate %27 1 Offset 12
OpDecorate %29 ArrayStride 8
OpDecorate %31 ArrayStride 16
OpDecorate %34 ArrayStride 32
OpDecorate %35 ArrayStride 64
OpDecorate %37 ArrayStride 32
OpDecorate %38 ArrayStride 64
OpDecorate %46 DescriptorSet 0
OpDecorate %46 Binding 1
OpDecorate %47 Block
OpMemberDecorate %47 0 Offset 0
OpDecorate %49 NonWritable
OpDecorate %49 DescriptorSet 0
OpDecorate %49 Binding 2
OpDecorate %50 Block
OpMemberDecorate %50 0 Offset 0
OpDecorate %52 DescriptorSet 0
OpDecorate %52 Binding 3
OpDecorate %53 Block
OpMemberDecorate %53 0 Offset 0
OpDecorate %55 DescriptorSet 0
OpDecorate %55 Binding 4
OpDecorate %56 Block
OpMemberDecorate %56 0 Offset 0
OpDecorate %58 DescriptorSet 0
OpDecorate %58 Binding 5
OpDecorate %59 Block
OpMemberDecorate %59 0 Offset 0
OpMemberDecorate %59 0 ColMajor
OpMemberDecorate %59 0 MatrixStride 8
OpDecorate %61 DescriptorSet 0
OpDecorate %61 Binding 6
OpDecorate %62 Block
OpMemberDecorate %62 0 Offset 0
OpDecorate %64 DescriptorSet 0
OpDecorate %64 Binding 7
OpDecorate %65 Block
OpMemberDecorate %65 0 Offset 0
%2 = OpTypeVoid
%4 = OpTypeBool
%3 = OpConstantTrue  %4
%6 = OpTypeInt 32 0
%5 = OpConstant  %6  10
%8 = OpTypeInt 32 1
%7 = OpConstant  %8  20
%9 = OpConstant  %8  2
%11 = OpTypeFloat 32
%10 = OpConstant  %11  1.0
%12 = OpConstant  %8  1
%13 = OpConstant  %8  0
%14 = OpConstant  %11  2.0
%15 = OpConstant  %11  3.0
%16 = OpConstant  %11  0.0
%17 = OpConstant  %8  7
%18 = OpConstant  %8  6
%19 = OpConstant  %8  5
%20 = OpConstant  %8  4
%21 = OpConstant  %8  3
%22 = OpConstant  %11  4.0
%23 = OpConstant  %6  2
%24 = OpConstantTrue  %4
%25 = OpTypeArray %11 %5
%26 = OpTypeVector %11 3
%27 = OpTypeStruct %26 %11
%28 = OpTypeVector %11 2
%29 = OpTypeRuntimeArray %28
%30 = OpTypeVector %11 4
%31 = OpTypeArray %30 %7
%32 = OpTypeMatrix %28 3
%33 = OpTypeMatrix %30 2
%34 = OpTypeArray %33 %9
%35 = OpTypeArray %34 %9
%36 = OpTypeMatrix %28 4
%37 = OpTypeArray %36 %9
%38 = OpTypeArray %37 %9
%39 = OpTypeMatrix %26 3
%40 = OpConstantComposite  %26  %16 %16 %16
%41 = OpConstantComposite  %39  %40 %40 %40
%43 = OpTypePointer Workgroup %25
%42 = OpVariable  %43  Workgroup
%45 = OpTypePointer Workgroup %6
%44 = OpVariable  %45  Workgroup
%47 = OpTypeStruct %27
%48 = OpTypePointer StorageBuffer %47
%46 = OpVariable  %48  StorageBuffer
%50 = OpTypeStruct %29
%51 = OpTypePointer StorageBuffer %50
%49 = OpVariable  %51  StorageBuffer
%53 = OpTypeStruct %31
%54 = OpTypePointer Uniform %53
%52 = OpVariable  %54  Uniform
%56 = OpTypeStruct %26
%57 = OpTypePointer Uniform %56
%55 = OpVariable  %57  Uniform
%59 = OpTypeStruct %32
%60 = OpTypePointer Uniform %59
%58 = OpVariable  %60  Uniform
%62 = OpTypeStruct %35
%63 = OpTypePointer Uniform %62
%61 = OpVariable  %63  Uniform
%65 = OpTypeStruct %38
%66 = OpTypePointer Uniform %65
%64 = OpVariable  %66  Uniform
%70 = OpTypeFunction %2 %26
%73 = OpTypePointer Function %8
%74 = OpConstantNull  %8
%77 = OpTypeFunction %2
%78 = OpTypePointer StorageBuffer %27
%79 = OpConstant  %6  0
%82 = OpTypePointer StorageBuffer %26
%85 = OpTypePointer StorageBuffer %11
%105 = OpTypePointer Function %11
%106 = OpConstantNull  %11
%108 = OpTypePointer Function %4
%109 = OpConstantNull  %4
%113 = OpTypePointer StorageBuffer %29
%115 = OpTypePointer Uniform %31
%117 = OpTypePointer Uniform %26
%119 = OpTypePointer Uniform %32
%121 = OpTypePointer Uniform %35
%123 = OpTypePointer Uniform %38
%127 = OpTypePointer Workgroup %11
%128 = OpTypePointer Uniform %37
%129 = OpTypePointer Uniform %36
%132 = OpTypePointer Uniform %34
%133 = OpTypePointer Uniform %33
%134 = OpTypePointer Uniform %30
%139 = OpConstant  %6  7
%145 = OpConstant  %6  6
%147 = OpTypePointer StorageBuffer %28
%148 = OpConstant  %6  1
%151 = OpConstant  %6  5
%153 = OpTypePointer Uniform %30
%154 = OpTypePointer Uniform %11
%155 = OpConstant  %6  3
%158 = OpConstant  %6  4
%160 = OpTypePointer StorageBuffer %11
%171 = OpConstant  %6  256
%69 = OpFunction  %2  None %70
%68 = OpFunctionParameter  %26
%67 = OpLabel
OpBranch %71
%71 = OpLabel
OpReturn
OpFunctionEnd
%76 = OpFunction  %2  None %77
%75 = OpLabel
%72 = OpVariable  %73  Function %74
%80 = OpAccessChain  %78  %46 %79
OpBranch %81
%81 = OpLabel
%83 = OpCompositeConstruct  %26  %10 %10 %10
%84 = OpAccessChain  %82  %80 %79
OpStore %84 %83
OpStore %72 %12
%86 = OpAccessChain  %85  %80 %79 %79
OpStore %86 %10
%87 = OpAccessChain  %85  %80 %79 %79
OpStore %87 %14
%88 = OpLoad  %8  %72
%89 = OpAccessChain  %85  %80 %79 %88
OpStore %89 %15
%90 = OpLoad  %27  %80
%91 = OpCompositeExtract  %26  %90 0
%92 = OpCompositeExtract  %26  %90 0
%93 = OpVectorShuffle  %28  %92 %92 2 0
%94 = OpCompositeExtract  %26  %90 0
%95 = OpFunctionCall  %2  %69 %94
%96 = OpCompositeExtract  %26  %90 0
%97 = OpVectorTimesMatrix  %26  %96 %41
%98 = OpCompositeExtract  %26  %90 0
%99 = OpMatrixTimesVector  %26  %41 %98
%100 = OpCompositeExtract  %26  %90 0
%101 = OpVectorTimesScalar  %26  %100 %14
%102 = OpCompositeExtract  %26  %90 0
%103 = OpVectorTimesScalar  %26  %102 %14
OpReturn
OpFunctionEnd
%111 = OpFunction  %2  None %77
%110 = OpLabel
%104 = OpVariable  %105  Function %106
%107 = OpVariable  %108  Function %109
%112 = OpAccessChain  %78  %46 %79
%114 = OpAccessChain  %113  %49 %79
%116 = OpAccessChain  %115  %52 %79
%118 = OpAccessChain  %117  %55 %79
%120 = OpAccessChain  %119  %58 %79
%122 = OpAccessChain  %121  %61 %79
%124 = OpAccessChain  %123  %64 %79
OpBranch %125
%125 = OpLabel
%126 = OpFunctionCall  %2  %76
%130 = OpAccessChain  %129  %124 %79 %79
%131 = OpLoad  %36  %130
%135 = OpAccessChain  %134  %122 %79 %79 %79
%136 = OpLoad  %30  %135
%137 = OpMatrixTimesVector  %28  %131 %136
%138 = OpCompositeExtract  %11  %137 0
%140 = OpAccessChain  %127  %42 %139
OpStore %140 %138
%141 = OpLoad  %32  %120
%142 = OpLoad  %26  %118
%143 = OpMatrixTimesVector  %28  %141 %142
%144 = OpCompositeExtract  %11  %143 0
%146 = OpAccessChain  %127  %42 %145
OpStore %146 %144
%149 = OpAccessChain  %85  %114 %148 %148
%150 = OpLoad  %11  %149
%152 = OpAccessChain  %127  %42 %151
OpStore %152 %150
%156 = OpAccessChain  %154  %116 %79 %155
%157 = OpLoad  %11  %156
%159 = OpAccessChain  %127  %42 %158
OpStore %159 %157
%161 = OpAccessChain  %160  %112 %148
%162 = OpLoad  %11  %161
%163 = OpAccessChain  %127  %42 %155
OpStore %163 %162
%164 = OpAccessChain  %85  %112 %79 %79
%165 = OpLoad  %11  %164
%166 = OpAccessChain  %127  %42 %23
OpStore %166 %165
%167 = OpAccessChain  %160  %112 %148
OpStore %167 %22
%168 = OpArrayLength  %6  %49 0
%169 = OpConvertUToF  %11  %168
%170 = OpAccessChain  %127  %42 %148
OpStore %170 %169
OpAtomicStore %44 %9 %171 %23
OpStore %104 %10
OpStore %107 %24
OpReturn
OpFunctionEnd