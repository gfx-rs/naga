[stage(compute), workgroup_size(1, 1, 1)]
fn main() {
    var i: i32 = 0;
    var i2: vec2<i32>;
    var i3: vec3<i32>;
    var i4: vec4<i32>;
    var u: u32 = 0u;
    var u2: vec2<u32>;
    var u3: vec3<u32>;
    var u4: vec4<u32>;
    var f2: vec2<f32>;
    var f4: vec4<f32>;

    i2 = vec2<i32>(0);
    i3 = vec3<i32>(0);
    i4 = vec4<i32>(0);
    u2 = vec2<u32>(0u);
    u3 = vec3<u32>(0u);
    u4 = vec4<u32>(0u);
    f2 = vec2<f32>(0.0);
    f4 = vec4<f32>(0.0);
    let e28: vec4<f32> = f4;
    u = pack4x8snorm(e28);
    let e30: vec4<f32> = f4;
    u = pack4x8unorm(e30);
    let e32: vec2<f32> = f2;
    u = pack2x16snorm(e32);
    let e34: vec2<f32> = f2;
    u = pack2x16unorm(e34);
    let e36: vec2<f32> = f2;
    u = pack2x16float(e36);
    let e38: u32 = u;
    f4 = unpack4x8snorm(e38);
    let e40: u32 = u;
    f4 = unpack4x8unorm(e40);
    let e42: u32 = u;
    f2 = unpack2x16snorm(e42);
    let e44: u32 = u;
    f2 = unpack2x16unorm(e44);
    let e46: u32 = u;
    f2 = unpack2x16float(e46);
    let e48: i32 = i;
    let e49: i32 = i;
    i = insertBits(e48, e49, 5u, 10u);
    let e53: vec2<i32> = i2;
    let e54: vec2<i32> = i2;
    i2 = insertBits(e53, e54, 5u, 10u);
    let e58: vec3<i32> = i3;
    let e59: vec3<i32> = i3;
    i3 = insertBits(e58, e59, 5u, 10u);
    let e63: vec4<i32> = i4;
    let e64: vec4<i32> = i4;
    i4 = insertBits(e63, e64, 5u, 10u);
    let e68: u32 = u;
    let e69: u32 = u;
    u = insertBits(e68, e69, 5u, 10u);
    let e73: vec2<u32> = u2;
    let e74: vec2<u32> = u2;
    u2 = insertBits(e73, e74, 5u, 10u);
    let e78: vec3<u32> = u3;
    let e79: vec3<u32> = u3;
    u3 = insertBits(e78, e79, 5u, 10u);
    let e83: vec4<u32> = u4;
    let e84: vec4<u32> = u4;
    u4 = insertBits(e83, e84, 5u, 10u);
    let e88: i32 = i;
    i = extractBits(e88, 5u, 10u);
    let e92: vec2<i32> = i2;
    i2 = extractBits(e92, 5u, 10u);
    let e96: vec3<i32> = i3;
    i3 = extractBits(e96, 5u, 10u);
    let e100: vec4<i32> = i4;
    i4 = extractBits(e100, 5u, 10u);
    let e104: u32 = u;
    u = extractBits(e104, 5u, 10u);
    let e108: vec2<u32> = u2;
    u2 = extractBits(e108, 5u, 10u);
    let e112: vec3<u32> = u3;
    u3 = extractBits(e112, 5u, 10u);
    let e116: vec4<u32> = u4;
    u4 = extractBits(e116, 5u, 10u);
    return;
}
