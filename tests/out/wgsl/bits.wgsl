[[stage(compute), workgroup_size(1, 1, 1)]]
fn main() {
    var i: i32 = 0;
    var i2_: vec2<i32>;
    var i3_: vec3<i32>;
    var i4_: vec4<i32>;
    var u: u32 = 0u;
    var u2_: vec2<u32>;
    var u3_: vec3<u32>;
    var u4_: vec4<u32>;
    var f2_: vec2<f32>;
    var f4_: vec4<f32>;

    i2_ = vec2<i32>(0);
    i3_ = vec3<i32>(0);
    i4_ = vec4<i32>(0);
    u2_ = vec2<u32>(0u);
    u3_ = vec3<u32>(0u);
    u4_ = vec4<u32>(0u);
    f2_ = vec2<f32>(0.0);
    f4_ = vec4<f32>(0.0);
    let _e28: vec4<f32> = f4_;
    u = pack4x8snorm(_e28);
    let _e30: vec4<f32> = f4_;
    u = pack4x8unorm(_e30);
    let _e32: vec2<f32> = f2_;
    u = pack2x16snorm(_e32);
    let _e34: vec2<f32> = f2_;
    u = pack2x16unorm(_e34);
    let _e36: vec2<f32> = f2_;
    u = pack2x16float(_e36);
    let _e38: u32 = u;
    f4_ = unpack4x8snorm(_e38);
    let _e40: u32 = u;
    f4_ = unpack4x8unorm(_e40);
    let _e42: u32 = u;
    f2_ = unpack2x16snorm(_e42);
    let _e44: u32 = u;
    f2_ = unpack2x16unorm(_e44);
    let _e46: u32 = u;
    f2_ = unpack2x16float(_e46);
    let _e48: i32 = i;
    let _e49: i32 = i;
    i = insertBits(_e48, _e49, 5u, 10u);
    let _e53: vec2<i32> = i2_;
    let _e54: vec2<i32> = i2_;
    i2_ = insertBits(_e53, _e54, 5u, 10u);
    let _e58: vec3<i32> = i3_;
    let _e59: vec3<i32> = i3_;
    i3_ = insertBits(_e58, _e59, 5u, 10u);
    let _e63: vec4<i32> = i4_;
    let _e64: vec4<i32> = i4_;
    i4_ = insertBits(_e63, _e64, 5u, 10u);
    let _e68: u32 = u;
    let _e69: u32 = u;
    u = insertBits(_e68, _e69, 5u, 10u);
    let _e73: vec2<u32> = u2_;
    let _e74: vec2<u32> = u2_;
    u2_ = insertBits(_e73, _e74, 5u, 10u);
    let _e78: vec3<u32> = u3_;
    let _e79: vec3<u32> = u3_;
    u3_ = insertBits(_e78, _e79, 5u, 10u);
    let _e83: vec4<u32> = u4_;
    let _e84: vec4<u32> = u4_;
    u4_ = insertBits(_e83, _e84, 5u, 10u);
    let _e88: i32 = i;
    i = extractBits(_e88, 5u, 10u);
    let _e92: vec2<i32> = i2_;
    i2_ = extractBits(_e92, 5u, 10u);
    let _e96: vec3<i32> = i3_;
    i3_ = extractBits(_e96, 5u, 10u);
    let _e100: vec4<i32> = i4_;
    i4_ = extractBits(_e100, 5u, 10u);
    let _e104: u32 = u;
    u = extractBits(_e104, 5u, 10u);
    let _e108: vec2<u32> = u2_;
    u2_ = extractBits(_e108, 5u, 10u);
    let _e112: vec3<u32> = u3_;
    u3_ = extractBits(_e112, 5u, 10u);
    let _e116: vec4<u32> = u4_;
    u4_ = extractBits(_e116, 5u, 10u);
    return;
}
