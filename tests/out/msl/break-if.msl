// language: metal2.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;

typedef bool bool_;

void breakIfEmpty(
) {
    bool loop_init = true;
    while(true) {
        if (!loop_init) {
            if (true) {
                break;
            }
        }
        loop_init = false;
    }
    return;
}

void breakIfEmptyBody(
    bool_ a
) {
    bool_ b = {};
    bool_ c = {};
    bool_ _e9 = c;
    bool unnamed = a == _e9;
    bool loop_init_1 = true;
    while(true) {
        if (!loop_init_1) {
            b = a;
            bool_ _e4 = b;
            bool c_1 = a != _e4;
            c = c_1;
            if (unnamed) {
                break;
            }
        }
        loop_init_1 = false;
    }
    return;
}

void breakIf(
    bool_ a_1
) {
    bool_ d = {};
    bool_ e = {};
    bool_ _e9 = e;
    bool unnamed_1 = a_1 == _e9;
    bool loop_init_2 = true;
    while(true) {
        if (!loop_init_2) {
            if (unnamed_1) {
                break;
            }
        }
        loop_init_2 = false;
        d = a_1;
        bool_ _e4 = d;
        bool e_1 = a_1 != _e4;
        e = e_1;
    }
    return;
}

kernel void main_(
) {
    return;
}
