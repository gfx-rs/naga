// language: metal2.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;

typedef metal::float4 vec4f32_;
typedef metal::int4 vec4i32_;
typedef bool bool_;
typedef metal::bool4 vec4bool;
typedef float f32_;
typedef int i32_;
typedef metal::float2 vec2f32_;
typedef metal::float3 vec3f32_;
typedef metal::bool3 vec3bool;
struct Foo {
    vec4f32_ a;
    i32_ b;
};
typedef metal::float2x2 mat2x2f32_;
typedef metal::float4x4 mat4x4f32_;
typedef uint u32_;
typedef metal::uint2 vec2u32_;
struct arrayFoo3_ {
    Foo inner[3u];
};
struct arrayi324_ {
    i32_ inner[4u];
};
typedef metal::float2x3 mat2x3f32_;
typedef thread Foo& ptrfunctionFoo;
typedef thread vec4f32_& ptrfunctionvec4f32_;
typedef metal::bool2 vec2bool;
typedef metal::int2 vec2i32_;
typedef metal::uint3 vec3u32_;
typedef metal::float3x3 mat3x3f32_;
typedef metal::float4x3 mat4x3f32_;
typedef metal::float3x4 mat3x4f32_;
typedef metal::int3 vec3i32_;
typedef thread vec3i32_& ptrfunctionvec3i32_;
constant vec4f32_ v_f32_one = {1.0, 1.0, 1.0, 1.0};
constant vec4f32_ v_f32_zero = {0.0, 0.0, 0.0, 0.0};
constant vec4f32_ v_f32_half = {0.5, 0.5, 0.5, 0.5};
constant vec4i32_ v_i32_one = {1, 1, 1, 1};
constant vec2u32_ const_vec2u32_ = {0u, 0u};
constant vec2f32_ const_vec2f32_ = {0.0, 0.0};
constant mat2x2f32_ const_mat2x2f32_ = {const_vec2f32_, const_vec2f32_};
constant vec4f32_ const_vec4f32_ = {0.0, 0.0, 0.0, 0.0};
constant Foo const_Foo = {const_vec4f32_, 0};
constant arrayFoo3_ const_arrayFoo3_ = {const_Foo, const_Foo, const_Foo};
constant vec3f32_ const_vec3f32_ = {0.0, 0.0, 0.0};
constant mat2x3f32_ const_mat2x3f32_ = {const_vec3f32_, const_vec3f32_};
constant mat3x3f32_ const_mat3x3f32_ = {const_vec3f32_, const_vec3f32_, const_vec3f32_};
constant mat4x3f32_ const_mat4x3f32_ = {const_vec3f32_, const_vec3f32_, const_vec3f32_, const_vec3f32_};
constant mat3x4f32_ const_mat3x4f32_ = {const_vec4f32_, const_vec4f32_, const_vec4f32_};
constant vec3i32_ const_vec3i32_ = {0, 0, 0};

vec4f32_ builtins(
) {
    int s1_ = true ? 1 : 0;
    vec4f32_ s2_ = true ? v_f32_one : v_f32_zero;
    vec4f32_ s3_ = metal::select(v_f32_one, v_f32_zero, metal::bool4(false, false, false, false));
    vec4f32_ m1_ = metal::mix(v_f32_zero, v_f32_one, v_f32_half);
    vec4f32_ m2_ = metal::mix(v_f32_zero, v_f32_one, 0.1);
    float b1_ = as_type<float>(v_i32_one.x);
    metal::float4 b2_ = as_type<metal::float4>(v_i32_one);
    metal::int4 v_i32_zero = static_cast<metal::int4>(v_f32_zero);
    return ((((static_cast<metal::float4>(metal::int4(s1_) + v_i32_zero) + s2_) + m1_) + m2_) + metal::float4(b1_)) + b2_;
}

vec4f32_ splat(
) {
    metal::float2 a_2 = ((metal::float2(1.0) + metal::float2(2.0)) - metal::float2(3.0)) / metal::float2(4.0);
    metal::int4 b = metal::int4(5) % metal::int4(2);
    return a_2.xyxy + static_cast<metal::float4>(b);
}

vec2f32_ splat_assignment(
) {
    vec2f32_ a = {};
    metal::float2 a_3 = metal::float2(2.0);
    a = a_3;
    vec2f32_ _e4 = a;
    a = _e4 + metal::float2(1.0);
    vec2f32_ _e9 = a;
    a = _e9 - metal::float2(3.0);
    vec2f32_ _e14 = a;
    a = _e14 / metal::float2(4.0);
    vec2f32_ _e19 = a;
    return _e19;
}

vec3f32_ bool_cast(
    vec3f32_ x
) {
    metal::bool3 y = static_cast<metal::bool3>(x);
    return static_cast<metal::float3>(y);
}

f32_ constructors(
) {
    Foo foo = {};
    foo = Foo {metal::float4(1.0), 1};
    mat2x2f32_ mat2comp = metal::float2x2(metal::float2(1.0, 0.0), metal::float2(0.0, 1.0));
    mat4x4f32_ mat4comp = metal::float4x4(metal::float4(1.0, 0.0, 0.0, 0.0), metal::float4(0.0, 1.0, 0.0, 0.0), metal::float4(0.0, 0.0, 1.0, 0.0), metal::float4(0.0, 0.0, 0.0, 1.0));
    metal::uint2 unnamed = metal::uint2(0u);
    mat2x2f32_ unnamed_1 = metal::float2x2(metal::float2(0.0), metal::float2(0.0));
    arrayi324_ unnamed_2 = arrayi324_ {0, 1, 2, 3};
    bool unnamed_3 = static_cast<bool>(false);
    int unnamed_4 = static_cast<int>(0);
    uint unnamed_5 = static_cast<uint>(0u);
    float unnamed_6 = static_cast<float>(0.0);
    metal::uint2 unnamed_7 = static_cast<metal::uint2>(const_vec2u32_);
    metal::float2x3 unnamed_8 = metal::float2x3(const_mat2x3f32_);
    metal::uint2 unnamed_9 = static_cast<metal::uint2>(const_vec2u32_);
    metal::float2x3 unnamed_10 = metal::float2x3(const_mat2x3f32_);
    float _e72 = foo.a.x;
    return _e72;
}

void logical(
) {
    bool unnamed_11 = !true;
    metal::bool2 unnamed_12 = !metal::bool2(true);
    bool unnamed_13 = true | false;
    bool unnamed_14 = true & false;
    bool unnamed_15 = true | false;
    metal::bool3 unnamed_16 = metal::bool3(true) | metal::bool3(false);
    bool unnamed_17 = true & false;
    metal::bool4 unnamed_18 = metal::bool4(true) & metal::bool4(false);
}

void arithmetic(
) {
    float unnamed_19 = -1.0;
    metal::int2 unnamed_20 = -metal::int2(1);
    metal::float2 unnamed_21 = -metal::float2(1.0);
    int unnamed_22 = 2 + 1;
    uint unnamed_23 = 2u + 1u;
    float unnamed_24 = 2.0 + 1.0;
    metal::int2 unnamed_25 = metal::int2(2) + metal::int2(1);
    metal::uint3 unnamed_26 = metal::uint3(2u) + metal::uint3(1u);
    metal::float4 unnamed_27 = metal::float4(2.0) + metal::float4(1.0);
    int unnamed_28 = 2 - 1;
    uint unnamed_29 = 2u - 1u;
    float unnamed_30 = 2.0 - 1.0;
    metal::int2 unnamed_31 = metal::int2(2) - metal::int2(1);
    metal::uint3 unnamed_32 = metal::uint3(2u) - metal::uint3(1u);
    metal::float4 unnamed_33 = metal::float4(2.0) - metal::float4(1.0);
    int unnamed_34 = 2 * 1;
    uint unnamed_35 = 2u * 1u;
    float unnamed_36 = 2.0 * 1.0;
    metal::int2 unnamed_37 = metal::int2(2) * metal::int2(1);
    metal::uint3 unnamed_38 = metal::uint3(2u) * metal::uint3(1u);
    metal::float4 unnamed_39 = metal::float4(2.0) * metal::float4(1.0);
    int unnamed_40 = 2 / 1;
    uint unnamed_41 = 2u / 1u;
    float unnamed_42 = 2.0 / 1.0;
    metal::int2 unnamed_43 = metal::int2(2) / metal::int2(1);
    metal::uint3 unnamed_44 = metal::uint3(2u) / metal::uint3(1u);
    metal::float4 unnamed_45 = metal::float4(2.0) / metal::float4(1.0);
    int unnamed_46 = 2 % 1;
    uint unnamed_47 = 2u % 1u;
    float unnamed_48 = metal::fmod(2.0, 1.0);
    metal::int2 unnamed_49 = metal::int2(2) % metal::int2(1);
    metal::uint3 unnamed_50 = metal::uint3(2u) % metal::uint3(1u);
    metal::float4 unnamed_51 = metal::fmod(metal::float4(2.0), metal::float4(1.0));
    metal::int2 unnamed_52 = metal::int2(2) + metal::int2(1);
    metal::int2 unnamed_53 = metal::int2(2) + metal::int2(1);
    metal::uint2 unnamed_54 = metal::uint2(2u) + metal::uint2(1u);
    metal::uint2 unnamed_55 = metal::uint2(2u) + metal::uint2(1u);
    metal::float2 unnamed_56 = metal::float2(2.0) + metal::float2(1.0);
    metal::float2 unnamed_57 = metal::float2(2.0) + metal::float2(1.0);
    metal::int2 unnamed_58 = metal::int2(2) - metal::int2(1);
    metal::int2 unnamed_59 = metal::int2(2) - metal::int2(1);
    metal::uint2 unnamed_60 = metal::uint2(2u) - metal::uint2(1u);
    metal::uint2 unnamed_61 = metal::uint2(2u) - metal::uint2(1u);
    metal::float2 unnamed_62 = metal::float2(2.0) - metal::float2(1.0);
    metal::float2 unnamed_63 = metal::float2(2.0) - metal::float2(1.0);
    metal::int2 unnamed_64 = metal::int2(2) * 1;
    metal::int2 unnamed_65 = 2 * metal::int2(1);
    metal::uint2 unnamed_66 = metal::uint2(2u) * 1u;
    metal::uint2 unnamed_67 = 2u * metal::uint2(1u);
    metal::float2 unnamed_68 = metal::float2(2.0) * 1.0;
    metal::float2 unnamed_69 = 2.0 * metal::float2(1.0);
    metal::int2 unnamed_70 = metal::int2(2) / metal::int2(1);
    metal::int2 unnamed_71 = metal::int2(2) / metal::int2(1);
    metal::uint2 unnamed_72 = metal::uint2(2u) / metal::uint2(1u);
    metal::uint2 unnamed_73 = metal::uint2(2u) / metal::uint2(1u);
    metal::float2 unnamed_74 = metal::float2(2.0) / metal::float2(1.0);
    metal::float2 unnamed_75 = metal::float2(2.0) / metal::float2(1.0);
    metal::int2 unnamed_76 = metal::int2(2) % metal::int2(1);
    metal::int2 unnamed_77 = metal::int2(2) % metal::int2(1);
    metal::uint2 unnamed_78 = metal::uint2(2u) % metal::uint2(1u);
    metal::uint2 unnamed_79 = metal::uint2(2u) % metal::uint2(1u);
    metal::float2 unnamed_80 = metal::fmod(metal::float2(2.0), metal::float2(1.0));
    metal::float2 unnamed_81 = metal::fmod(metal::float2(2.0), metal::float2(1.0));
    mat3x3f32_ unnamed_82 = const_mat3x3f32_ + const_mat3x3f32_;
    mat3x3f32_ unnamed_83 = const_mat3x3f32_ - const_mat3x3f32_;
    mat3x3f32_ unnamed_84 = const_mat3x3f32_ * 1.0;
    mat3x3f32_ unnamed_85 = 2.0 * const_mat3x3f32_;
    metal::float3 unnamed_86 = const_mat4x3f32_ * metal::float4(1.0);
    metal::float4 unnamed_87 = metal::float3(2.0) * const_mat4x3f32_;
    metal::float3x3 unnamed_88 = const_mat4x3f32_ * const_mat3x4f32_;
}

void bit(
) {
    int unnamed_89 = ~1;
    uint unnamed_90 = ~1u;
    metal::int2 unnamed_91 = ~metal::int2(1);
    metal::uint3 unnamed_92 = ~metal::uint3(1u);
    int unnamed_93 = 2 | 1;
    uint unnamed_94 = 2u | 1u;
    metal::int2 unnamed_95 = metal::int2(2) | metal::int2(1);
    metal::uint3 unnamed_96 = metal::uint3(2u) | metal::uint3(1u);
    int unnamed_97 = 2 & 1;
    uint unnamed_98 = 2u & 1u;
    metal::int2 unnamed_99 = metal::int2(2) & metal::int2(1);
    metal::uint3 unnamed_100 = metal::uint3(2u) & metal::uint3(1u);
    int unnamed_101 = 2 ^ 1;
    uint unnamed_102 = 2u ^ 1u;
    metal::int2 unnamed_103 = metal::int2(2) ^ metal::int2(1);
    metal::uint3 unnamed_104 = metal::uint3(2u) ^ metal::uint3(1u);
    int unnamed_105 = 2 << 1u;
    uint unnamed_106 = 2u << 1u;
    metal::int2 unnamed_107 = metal::int2(2) << metal::uint2(1u);
    metal::uint3 unnamed_108 = metal::uint3(2u) << metal::uint3(1u);
    int unnamed_109 = 2 >> 1u;
    uint unnamed_110 = 2u >> 1u;
    metal::int2 unnamed_111 = metal::int2(2) >> metal::uint2(1u);
    metal::uint3 unnamed_112 = metal::uint3(2u) >> metal::uint3(1u);
}

void comparison(
) {
    bool unnamed_113 = 2 == 1;
    bool unnamed_114 = 2u == 1u;
    bool unnamed_115 = 2.0 == 1.0;
    metal::bool2 unnamed_116 = metal::int2(2) == metal::int2(1);
    metal::bool3 unnamed_117 = metal::uint3(2u) == metal::uint3(1u);
    metal::bool4 unnamed_118 = metal::float4(2.0) == metal::float4(1.0);
    bool unnamed_119 = 2 != 1;
    bool unnamed_120 = 2u != 1u;
    bool unnamed_121 = 2.0 != 1.0;
    metal::bool2 unnamed_122 = metal::int2(2) != metal::int2(1);
    metal::bool3 unnamed_123 = metal::uint3(2u) != metal::uint3(1u);
    metal::bool4 unnamed_124 = metal::float4(2.0) != metal::float4(1.0);
    bool unnamed_125 = 2 < 1;
    bool unnamed_126 = 2u < 1u;
    bool unnamed_127 = 2.0 < 1.0;
    metal::bool2 unnamed_128 = metal::int2(2) < metal::int2(1);
    metal::bool3 unnamed_129 = metal::uint3(2u) < metal::uint3(1u);
    metal::bool4 unnamed_130 = metal::float4(2.0) < metal::float4(1.0);
    bool unnamed_131 = 2 <= 1;
    bool unnamed_132 = 2u <= 1u;
    bool unnamed_133 = 2.0 <= 1.0;
    metal::bool2 unnamed_134 = metal::int2(2) <= metal::int2(1);
    metal::bool3 unnamed_135 = metal::uint3(2u) <= metal::uint3(1u);
    metal::bool4 unnamed_136 = metal::float4(2.0) <= metal::float4(1.0);
    bool unnamed_137 = 2 > 1;
    bool unnamed_138 = 2u > 1u;
    bool unnamed_139 = 2.0 > 1.0;
    metal::bool2 unnamed_140 = metal::int2(2) > metal::int2(1);
    metal::bool3 unnamed_141 = metal::uint3(2u) > metal::uint3(1u);
    metal::bool4 unnamed_142 = metal::float4(2.0) > metal::float4(1.0);
    bool unnamed_143 = 2 >= 1;
    bool unnamed_144 = 2u >= 1u;
    bool unnamed_145 = 2.0 >= 1.0;
    metal::bool2 unnamed_146 = metal::int2(2) >= metal::int2(1);
    metal::bool3 unnamed_147 = metal::uint3(2u) >= metal::uint3(1u);
    metal::bool4 unnamed_148 = metal::float4(2.0) >= metal::float4(1.0);
}

void assignment(
) {
    i32_ a_1 = {};
    vec3i32_ vec0_ = {};
    a_1 = 1;
    i32_ _e3 = a_1;
    a_1 = _e3 + 1;
    i32_ _e7 = a_1;
    a_1 = _e7 - 1;
    i32_ _e11 = a_1;
    i32_ _e13 = a_1;
    a_1 = _e13 * _e11;
    i32_ _e16 = a_1;
    i32_ _e18 = a_1;
    a_1 = _e18 / _e16;
    i32_ _e21 = a_1;
    a_1 = _e21 % 1;
    i32_ _e25 = a_1;
    a_1 = _e25 & 0;
    i32_ _e29 = a_1;
    a_1 = _e29 | 0;
    i32_ _e33 = a_1;
    a_1 = _e33 ^ 0;
    i32_ _e38 = a_1;
    a_1 = _e38 << 2u;
    i32_ _e42 = a_1;
    a_1 = _e42 >> 1u;
    i32_ _e45 = a_1;
    a_1 = _e45 + 1;
    i32_ _e49 = a_1;
    a_1 = _e49 - 1;
    vec0_ = const_vec3i32_;
    int _e57 = vec0_.y;
    vec0_.y = _e57 + 1;
    int _e63 = vec0_.y;
    vec0_.y = _e63 - 1;
    return;
}

kernel void main_(
) {
    vec4f32_ _e0 = builtins();
    vec4f32_ _e1 = splat();
    vec3f32_ _e2 = bool_cast(v_f32_one.xyz);
    f32_ _e5 = constructors();
    logical();
    arithmetic();
    bit();
    comparison();
    assignment();
    return;
}
