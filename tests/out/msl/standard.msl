// language: metal2.0
#include <metal_stdlib>
#include <simd/simd.h>

using metal::uint;

typedef metal::float4 vec4f32_;

struct derivativesInput {
};
struct derivativesOutput {
    metal::float4 member [[color(0)]];
};
fragment derivativesOutput derivatives(
  vec4f32_ foo [[position]]
) {
    vec4f32_ x = metal::dfdx(foo);
    vec4f32_ y = metal::dfdy(foo);
    vec4f32_ z = metal::fwidth(foo);
    return derivativesOutput { (x + y) * z };
}
