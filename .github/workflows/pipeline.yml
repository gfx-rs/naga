# Regular testing.
name: pipeline
on: [push, pull_request]

env:
  CARGO_INCREMENTAL: false
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  MSRV: 1.63

jobs:
  test-msrv:
    name: Test MSRV and dependencies minimal-versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install MSRV toolchain
        run: rustup toolchain install $MSRV --no-self-update --profile=minimal
      - name: Install nightly toolchain
        run: rustup toolchain install nightly --no-self-update --profile=minimal
      - name: Install cargo-hack
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      # -Z avoid-dev-deps doesn't work
      - run: cargo +nightly hack generate-lockfile --remove-dev-deps -Z minimal-versions --offline
      - name: Test all features
        run: cargo +$MSRV test --all-features --workspace
      - name: Check snapshots
        run: git diff --exit-code -- tests/out
  test:
    name: Test Nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install nightly toolchain
        run: rustup toolchain install nightly --no-self-update --profile=minimal
      - name: Default test
        # Our intention here is to test `naga` with no features enabled. But
        # since `cli` is the default package, a plain `cargo test` will build
        # `naga` with the features requested in `cli/Cargo.toml`. Passing
        # `--package naga` causes us to use the default features in the
        # top-level `Cargo.toml` instead.
        run: cargo +nightly test --package naga
      - name: Test all features
        run: cargo +nightly test --all-features --workspace
      - name: Check snapshots
        run: git diff --exit-code -- tests/out
      - name: Check benchmarks
        run: cargo +nightly check --benches
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - run: cargo clippy --all-features --workspace -- -D warnings
  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v3
      - run: cargo doc -p naga --all-features --document-private-items
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo fmt -- --check
